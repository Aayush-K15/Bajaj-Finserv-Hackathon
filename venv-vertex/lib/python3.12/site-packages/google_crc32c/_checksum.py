













import struct


class CommonChecksum(object):
    
    __slots__ = ()

    def __init__(self, initial_value=b""):
        self._crc = 0
        if initial_value != b"":
            self.update(initial_value)

    def update(self, data):
        
        raise NotImplemented()

    def digest(self):
        
        return struct.pack(">L", self._crc)

    def hexdigest(self):
        
        return "{:08x}".format(self._crc).encode("ascii")

    def copy(self):
        
        clone = self.__class__()
        clone._crc = self._crc
        return clone

    def consume(self, stream, chunksize):
        
        while True:
            chunk = stream.read(chunksize)
            if not chunk:
                break
            self.update(chunk)
            yield chunk
