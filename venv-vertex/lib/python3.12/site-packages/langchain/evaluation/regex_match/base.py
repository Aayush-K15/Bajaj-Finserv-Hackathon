import re
from typing import Any

from langchain.evaluation.schema import StringEvaluator


class RegexMatchStringEvaluator(StringEvaluator):
      

    def __init__(self, *, flags: int = 0, **kwargs: Any):  
        super().__init__()
        self.flags = flags

    @property
    def requires_input(self) -> bool:
        
        return False

    @property
    def requires_reference(self) -> bool:
        
        return True

    @property
    def input_keys(self) -> list[str]:
        
        return ["reference", "prediction"]

    @property
    def evaluation_name(self) -> str:
        
        return "regex_match"

    def _evaluate_strings(  
        self,
        *,
        prediction: str,
        reference: str,
        **kwargs: Any,
    ) -> dict:
        
        match = re.match(reference, prediction, flags=self.flags)
        return {"score": int(bool(match))}
