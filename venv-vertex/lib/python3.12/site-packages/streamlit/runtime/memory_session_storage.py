













from __future__ import annotations

from typing import TYPE_CHECKING

from cachetools import TTLCache

from streamlit.runtime.session_manager import SessionInfo, SessionStorage

if TYPE_CHECKING:
    from collections.abc import MutableMapping


class MemorySessionStorage(SessionStorage):
    

    
    
    
    
    
    
    def __init__(
        self,
        maxsize: int = 128,
        ttl_seconds: int = 2 * 60,  
    ) -> None:
        

        self._cache: MutableMapping[str, SessionInfo] = TTLCache(
            maxsize=maxsize, ttl=ttl_seconds
        )

    def get(self, session_id: str) -> SessionInfo | None:
        return self._cache.get(session_id, None)

    def save(self, session_info: SessionInfo) -> None:
        self._cache[session_info.session.id] = session_info

    def delete(self, session_id: str) -> None:
        del self._cache[session_id]

    def list(self) -> list[SessionInfo]:
        return list(self._cache.values())
