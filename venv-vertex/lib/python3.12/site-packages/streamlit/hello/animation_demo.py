













from typing import Any

import numpy as np

import streamlit as st
from streamlit.hello.utils import show_code


def animation_demo() -> None:
    
    
    iterations = st.sidebar.slider("Level of detail", 2, 20, 10, 1)
    separation = st.sidebar.slider("Separation", 0.7, 2.0, 0.7885)

    
    
    progress_bar = st.sidebar.progress(0)

    
    
    frame_text = st.sidebar.empty()
    image = st.empty()

    m, n, s = 960, 640, 400
    x = np.linspace(-m / s, m / s, num=m).reshape((1, m))
    y = np.linspace(-n / s, n / s, num=n).reshape((n, 1))

    for frame_num, a in enumerate(np.linspace(0.0, 4 * np.pi, 100)):
        
        progress_bar.progress(frame_num)
        frame_text.text(f"Frame {frame_num + 1}/100")

        
        c = separation * np.exp(1j * a)
        z = np.tile(x, (n, 1)) + 1j * np.tile(y, (1, m))
        c_matrix = np.full((n, m), c)
        m_matrix: Any = np.full((n, m), True, dtype=bool)
        n_matrix = np.zeros((n, m))

        for i in range(iterations):
            z[m_matrix] = z[m_matrix] * z[m_matrix] + c_matrix[m_matrix]
            m_matrix[np.abs(z) > 2] = False
            n_matrix[m_matrix] = i

        
        image.image(1.0 - (n_matrix / n_matrix.max()), use_container_width=True)

    
    progress_bar.empty()
    frame_text.empty()

    
    
    
    st.button("Rerun")


st.set_page_config(page_title="Animation demo", page_icon=":material/animation:")
st.title("Animation demo")
st.write(
    
)
animation_demo()
show_code(animation_demo)
