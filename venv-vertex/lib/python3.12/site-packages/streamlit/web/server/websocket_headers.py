













from __future__ import annotations

from streamlit import runtime
from streamlit.deprecation_util import show_deprecation_warning
from streamlit.runtime.metrics_util import gather_metrics
from streamlit.runtime.scriptrunner_utils.script_run_context import get_script_run_ctx
from streamlit.web.server.browser_websocket_handler import BrowserWebSocketHandler

_GET_WEBSOCKET_HEADERS_DEPRECATE_MSG = (
    "The `_get_websocket_headers` function is deprecated and will be removed "
    "in a future version of Streamlit. Please use `st.context.headers` instead."
)


@gather_metrics("_get_websocket_headers")
def _get_websocket_headers() -> dict[str, str] | None:
    

    show_deprecation_warning(_GET_WEBSOCKET_HEADERS_DEPRECATE_MSG)

    ctx = get_script_run_ctx()
    if ctx is None:
        return None

    session_client = runtime.get_instance().get_client(ctx.session_id)
    if session_client is None:
        return None

    if not isinstance(session_client, BrowserWebSocketHandler):
        raise TypeError(
            f"SessionClient is not a BrowserWebSocketHandler! ({session_client})"
        )

    return dict(session_client.request.headers)
