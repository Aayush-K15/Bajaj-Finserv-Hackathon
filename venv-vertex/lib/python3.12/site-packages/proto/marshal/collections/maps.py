













import collections

from proto.utils import cached_property
from google.protobuf.message import Message


class MapComposite(collections.abc.MutableMapping):
    

    @cached_property
    def _pb_type(self):
        
        
        return type(self.pb.GetEntryClass()().value)

    def __init__(self, sequence, *, marshal):
        
        self._pb = sequence
        self._marshal = marshal

    def __contains__(self, key):
        
        
        
        
        
        return key in tuple(self.keys())

    def __getitem__(self, key):
        
        
        if key not in self:
            raise KeyError(key)
        return self._marshal.to_python(self._pb_type, self.pb[key])

    def __setitem__(self, key, value):
        pb_value = self._marshal.to_proto(self._pb_type, value, strict=True)
        
        
        
        
        
        
        self.pb[key].Clear()
        self.pb[key].MergeFrom(pb_value)

    def __delitem__(self, key):
        self.pb.pop(key)

    def __len__(self):
        return len(self.pb)

    def __iter__(self):
        return iter(self.pb)

    @property
    def pb(self):
        return self._pb
