

from __future__ import annotations

from typing import Any, Dict, TypeVar

_T = TypeVar("_T")


class CaseInsensitiveDict(Dict[str, Any]):
    

    def __contains__(self, key):
        return super(CaseInsensitiveDict, self).__contains__(key.lower())

    def __getitem__(self, key):
        return super(CaseInsensitiveDict, self).__getitem__(key.lower())

    def __setitem__(self, key, value):
        return super(CaseInsensitiveDict, self).__setitem__(key.lower(), value)


def cls_method_fn(cls: type, method_name: str):
    
    return getattr(cls, method_name)
