





from __future__ import annotations

import enum
from typing import TYPE_CHECKING, Any, Protocol

if TYPE_CHECKING:
    from collections.abc import Iterable


class DtypeKind(enum.IntEnum):
    

    INT = 0
    UINT = 1
    FLOAT = 2
    BOOL = 20
    STRING = 21  
    DATETIME = 22
    CATEGORICAL = 23






class Column(Protocol):
    @property
    def dtype(self) -> tuple[Any, int, str, str]:
        
        ...

    
    
    
    
    
    @property
    def describe_categorical(self) -> Any:
        
        ...


class DataFrame(Protocol):
    

    def __dataframe__(
        self, nan_as_null: bool = False, allow_copy: bool = True
    ) -> DataFrame:
        
        ...

    def column_names(self) -> Iterable[str]:
        
        ...

    def get_column_by_name(self, name: str) -> Column:
        
        ...

    def get_chunks(self, n_chunks: int | None = None) -> Iterable[DataFrame]:
        
        ...
