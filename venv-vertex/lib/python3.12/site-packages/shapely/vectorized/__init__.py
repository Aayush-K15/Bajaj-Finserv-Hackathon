

import warnings

import numpy as np

import shapely
from shapely.prepared import PreparedGeometry


def _construct_points(x, y):
    x, y = np.asanyarray(x), np.asanyarray(y)
    if x.shape != y.shape:
        raise ValueError("X and Y shapes must be equivalent.")

    if x.dtype != np.float64:
        x = x.astype(np.float64)
    if y.dtype != np.float64:
        y = y.astype(np.float64)

    return shapely.points(x, y)


def contains(geometry, x, y):
    
    warnings.warn(
        "The 'shapely.vectorized.contains' function is deprecated and will be "
        "removed a future version. Use 'shapely.contains_xy' instead (available "
        "since shapely 2.0.0).",
        DeprecationWarning,
        stacklevel=2,
    )
    if isinstance(geometry, PreparedGeometry):
        geometry = geometry.context
    shapely.prepare(geometry)
    return shapely.contains_xy(geometry, x, y)


def touches(geometry, x, y):
    
    warnings.warn(
        "The 'shapely.vectorized.touches' function is deprecated and will be "
        "removed a future version. Use 'shapely.intersects_xy(geometry.boundary, x, y)'"
        " instead (available since shapely 2.0.0).",
        DeprecationWarning,
        stacklevel=2,
    )
    if isinstance(geometry, PreparedGeometry):
        geometry = geometry.context
    
    boundary = geometry.boundary
    shapely.prepare(boundary)
    return shapely.intersects_xy(boundary, x, y)
