

from pickle import PicklingError

import shapely


class PreparedGeometry:
    

    def __init__(self, context):
        
        if isinstance(context, PreparedGeometry):
            self.context = context.context
        else:
            shapely.prepare(context)
            self.context = context
        self.prepared = True

    def contains(self, other):
        
        return self.context.contains(other)

    def contains_properly(self, other):
        
        return self.context.contains_properly(other)

    def covers(self, other):
        
        return self.context.covers(other)

    def crosses(self, other):
        
        return self.context.crosses(other)

    def disjoint(self, other):
        
        return self.context.disjoint(other)

    def intersects(self, other):
        
        return self.context.intersects(other)

    def overlaps(self, other):
        
        return self.context.overlaps(other)

    def touches(self, other):
        
        return self.context.touches(other)

    def within(self, other):
        
        return self.context.within(other)

    def __reduce__(self):
        
        raise PicklingError("Prepared geometries cannot be pickled.")


def prep(ob):
    
    return PreparedGeometry(ob)
