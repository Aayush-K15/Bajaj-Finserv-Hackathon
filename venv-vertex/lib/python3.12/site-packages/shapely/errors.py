

import threading

from shapely.lib import GEOSException, ShapelyError, _setup_signal_checks  


def setup_signal_checks(interval=10000):
    
    if interval <= 0:
        raise ValueError("Signal checks interval must be greater than zero.")

    _setup_signal_checks(interval, threading.main_thread().ident)


class UnsupportedGEOSVersionError(ShapelyError):
    


class DimensionError(ShapelyError):
    


class TopologicalError(ShapelyError):
    


class ShapelyDeprecationWarning(FutureWarning):
    


class EmptyPartError(ShapelyError):
    


class GeometryTypeError(ShapelyError):
    


def __getattr__(name):
    import warnings

    
    if name in [
        "ReadingError",
        "WKBReadingError",
        "WKTReadingError",
        "PredicateError",
        "InvalidGeometryError",
    ]:
        warnings.warn(
            f"{name} is deprecated and will be removed in a future version. "
            "Use ShapelyError instead (functions previously raising {name} "
            "will now raise a ShapelyError instead).",
            FutureWarning,
            stacklevel=2,
        )
        return ShapelyError

    raise AttributeError(f"module 'shapely.errors' has no attribute '{name}'")
