

import json
from typing import Any, List

import requests
from langchain_core.embeddings import Embeddings
from pydantic import BaseModel, ConfigDict, Field

API_URL = "https://api.bookend.ai/"
DEFAULT_TASK = "embeddings"
PATH = "/models/predict"


class BookendEmbeddings(BaseModel, Embeddings):
    

    domain: str
    
    api_token: str
    
    model_id: str
    
    auth_header: dict = Field(default_factory=dict)

    model_config = ConfigDict(protected_namespaces=())

    def __init__(self, **kwargs: Any):
        super().__init__(**kwargs)
        self.auth_header = {"Authorization": "Basic {}".format(self.api_token)}

    def embed_documents(self, texts: List[str]) -> List[List[float]]:
        
        result = []
        headers = self.auth_header
        headers["Content-Type"] = "application/json; charset=utf-8"
        params = {
            "model_id": self.model_id,
            "task": DEFAULT_TASK,
        }

        for text in texts:
            data = json.dumps(
                {
                    "text": text,
                    "question": None,
                    "context": None,
                    "instruction": None,
                }
            )
            r = requests.request(
                "POST",
                API_URL + self.domain + PATH,
                headers=headers,
                params=params,
                data=data,
            )
            result.append(r.json()[0]["data"])

        return result

    def embed_query(self, text: str) -> List[float]:
        
        return self.embed_documents([text])[0]
