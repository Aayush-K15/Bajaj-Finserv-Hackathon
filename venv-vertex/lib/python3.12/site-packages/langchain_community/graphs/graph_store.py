from abc import abstractmethod
from typing import Any, Dict, List

from langchain_community.graphs.graph_document import GraphDocument


class GraphStore:
    

    @property
    @abstractmethod
    def get_schema(self) -> str:
        
        pass

    @property
    @abstractmethod
    def get_structured_schema(self) -> Dict[str, Any]:
        
        pass

    @abstractmethod
    def query(self, query: str, params: dict = {}) -> List[Dict[str, Any]]:
        
        pass

    @abstractmethod
    def refresh_schema(self) -> None:
        
        pass

    @abstractmethod
    def add_graph_documents(
        self, graph_documents: List[GraphDocument], include_source: bool = False
    ) -> None:
        
        pass
