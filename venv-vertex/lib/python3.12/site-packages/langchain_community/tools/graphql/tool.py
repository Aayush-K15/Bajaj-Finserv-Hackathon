import json
from typing import Optional

from langchain_core.callbacks import CallbackManagerForToolRun
from langchain_core.tools import BaseTool
from pydantic import ConfigDict

from langchain_community.utilities.graphql import GraphQLAPIWrapper


class BaseGraphQLTool(BaseTool):
    

    graphql_wrapper: GraphQLAPIWrapper

    name: str = "query_graphql"
    description: str =   

    model_config = ConfigDict(
        arbitrary_types_allowed=True,
    )

    def _run(
        self,
        tool_input: str,
        run_manager: Optional[CallbackManagerForToolRun] = None,
    ) -> str:
        result = self.graphql_wrapper.run(tool_input)
        return json.dumps(result, indent=2)
