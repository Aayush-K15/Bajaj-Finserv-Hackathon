from typing import Any, Dict, List, Tuple

from pydantic import BaseModel, ConfigDict, Field

from langchain_community.cross_encoders.base import BaseCrossEncoder

DEFAULT_MODEL_NAME = "BAAI/bge-reranker-base"


class HuggingFaceCrossEncoder(BaseModel, BaseCrossEncoder):
    

    client: Any = None  
    model_name: str = DEFAULT_MODEL_NAME
    
    model_kwargs: Dict[str, Any] = Field(default_factory=dict)
    

    def __init__(self, **kwargs: Any):
        
        super().__init__(**kwargs)
        try:
            import sentence_transformers

        except ImportError as exc:
            raise ImportError(
                "Could not import sentence_transformers python package. "
                "Please install it with `pip install sentence-transformers`."
            ) from exc

        self.client = sentence_transformers.CrossEncoder(
            self.model_name, **self.model_kwargs
        )

    model_config = ConfigDict(extra="forbid", protected_namespaces=())

    def score(self, text_pairs: List[Tuple[str, str]]) -> List[float]:
        
        scores = self.client.predict(text_pairs)
        
        
        if len(scores.shape) > 1:  
            scores = map(lambda x: x[1], scores)
        return scores
