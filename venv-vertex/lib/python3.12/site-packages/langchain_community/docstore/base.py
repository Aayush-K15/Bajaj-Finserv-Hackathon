

from abc import ABC, abstractmethod
from typing import Dict, List, Union

from langchain_core.documents import Document


class Docstore(ABC):
    

    @abstractmethod
    def search(self, search: str) -> Union[str, Document]:
        

    def delete(self, ids: List) -> None:
        
        raise NotImplementedError


class AddableMixin(ABC):
    

    @abstractmethod
    def add(self, texts: Dict[str, Document]) -> None:
        
