
from unittest import TestCase
import os
import tempfile

__all__ = ['TestBase', 'FileCreator']




class FileCreator:

    
    __slots__ = ("_size", "_path")

    def __init__(self, size, prefix=''):
        assert size, "Require size to be larger 0"

        self._size = size

        with tempfile.NamedTemporaryFile("wb", prefix=prefix, delete=False) as file:
            self._path = file.name
            file.seek(size - 1)
            file.write(b'1')

        assert os.path.getsize(self.path) == size

    def __del__(self):
        try:
            os.remove(self.path)
        except OSError:
            pass
        

    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_value, traceback):
        self.__del__()

    @property
    def path(self):
        return self._path

    @property
    def size(self):
        return self._size




class TestBase(TestCase):

    

    
    k_window_test_size = 1000 * 1000 * 8 + 5195
    

    
    @classmethod
    def setUpAll(cls):
        
        pass

    

    

    
