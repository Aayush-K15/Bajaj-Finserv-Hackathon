

from typing import TYPE_CHECKING

_PUBLIC_API = ("cached_property", "under_cached_property")

__version__ = "0.3.2"
__all__ = ()



if TYPE_CHECKING:
    from .api import cached_property as cached_property  
    from .api import under_cached_property as under_cached_property  


def _import_facade(attr: str) -> object:
    
    if attr in _PUBLIC_API:
        from . import api  

        return getattr(api, attr)
    raise AttributeError(f"module '{__package__}' has no attribute '{attr}'")


def _dir_facade() -> list[str]:
    
    return [*_PUBLIC_API, *globals().keys()]


__getattr__ = _import_facade
__dir__ = _dir_facade
