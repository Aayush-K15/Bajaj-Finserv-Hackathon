__all__ = [
    'MeetingResponse',
]


import datetime
import functools

from typing import Optional

from ..constants import ps
from ..enums import ResponseType
from .meeting_related import MeetingRelated


class MeetingResponse(MeetingRelated):
    

    @functools.cached_property
    def appointmentCounterProposal(self) -> bool:
        
        return bool(self.getNamedProp('8257', ps.PSETID_APPOINTMENT))

    @functools.cached_property
    def appointmentProposedDuration(self) -> Optional[int]:
        
        return self.getNamedProp('8256', ps.PSETID_APPOINTMENT)

    @functools.cached_property
    def appointmentProposedEndWhole(self) -> Optional[datetime.datetime]:
        
        return self.getNamedProp('8251', ps.PSETID_APPOINTMENT)

    @functools.cached_property
    def appointmentProposedStartWhole(self) -> Optional[datetime.datetime]:
        
        return self.getNamedProp('8250', ps.PSETID_APPOINTMENT)

    @functools.cached_property
    def isSilent(self) -> bool:
        
        return bool(self.getNamedProp('0004', ps.PSETID_MEETING))

    @functools.cached_property
    def promptSendUpdate(self) -> bool:
        
        return bool(self.getNamedProp('8045', ps.PSETID_COMMON))

    @functools.cached_property
    def responseType(self) -> ResponseType:
        
        
        return ResponseType(self.classType.lower().split('.')[-1])
