__all__ = [
    'MeetingException',
]


import datetime
import functools

from typing import Optional

from .. import constants
from ..enums import SaveType
from .meeting_related import MeetingRelated


class MeetingException(MeetingRelated):
    

    def save(self, **_) -> constants.SAVE_TYPE:
        
        return (SaveType.NONE, None)

    @functools.cached_property
    def exceptionReplaceTime(self) -> Optional[datetime.datetime]:
        
        return self.getNamedProp('8228', constants.ps.PSETID_APPOINTMENT)

    @functools.cached_property
    def fExceptionalBody(self) -> bool:
        
        return bool(self.getNamedProp('8206', constants.ps.PSETID_APPOINTMENT))

    @functools.cached_property
    def fInvited(self) -> bool:
        
        return bool(self.getNamedProp('8229', constants.ps.PSETID_APPOINTMENT))
