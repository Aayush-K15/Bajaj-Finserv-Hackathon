

__all__ = [
    'lookupCodePage',
]



import ebcdic as _
import codecs

from ..exceptions import UnknownCodepageError, UnsupportedEncodingError
















_CODE_PAGES = {
    37: 'IBM037', 
    437: 'IBM437', 
    500: 'IBM500', 
    708: 'ASMO-708', 
    
    709: '', 
    
    710: '', 
    
    720: 'DOS-720', 
    737: 'cp737', 
    775: 'ibm775', 
    850: 'ibm850', 
    852: 'ibm852', 
    855: 'IBM855', 
    857: 'ibm857', 
    858: 'cp858', 
    860: 'IBM860', 
    861: 'ibm861', 
    862: 'cp862', 
    863: 'IBM863', 
    864: 'IBM864', 
    865: 'IBM865', 
    866: 'cp866', 
    869: 'ibm869', 
    870: 'cp870', 
    874: 'windows-874', 
    875: 'cp875', 
    932: 'shift_jis', 
    936: 'gb2312', 
    949: 'ks_c_5601-1987', 
    
    
    950: 'windows-950', 
    1026: 'IBM1026', 
    1047: 'cp1047', 
    1140: 'cp1140', 
    1141: 'cp1141', 
    1142: 'cp1142', 
    1143: 'cp1143', 
    1144: 'cp1144', 
    1145: 'cp1145', 
    1146: 'cp1146', 
    1147: 'cp1147', 
    1148: 'cp1148ms', 
    1149: 'cp1149', 
    1200: 'utf-16-le', 
    1201: 'utf-16-be', 
    1250: 'windows-1250', 
    1251: 'windows-1251', 
    1252: 'windows-1252', 
    1253: 'windows-1253', 
    1254: 'windows-1254', 
    1255: 'windows-1255', 
    1256: 'windows-1256', 
    1257: 'windows-1257', 
    1258: 'windows-1258', 
    1361: 'Johab', 
    10000: 'macintosh', 
    10001: 'x-mac-japanese', 
    
    10002: 'x-mac-chinesetrad', 
    10003: 'x-mac-korean', 
    
    10004: 'x-mac-arabic', 
    
    10005: 'x-mac-hebrew', 
    10006: 'x-mac-greek', 
    10007: 'x-mac-cyrillic', 
    
    10008: 'x-mac-chinesesimp', 
    
    10010: 'x-mac-romanian', 
    
    10017: 'x-mac-ukrainian', 
    
    10021: 'x-mac-thai', 
    10029: 'x-mac-ce', 
    10079: 'x-mac-icelandic', 
    10081: 'x-mac-turkish', 
    
    10082: 'x-mac-croatian', 
    12000: 'utf-32', 
    12001: 'utf-32BE', 
    
    20000: 'x-Chinese_CNS', 
    
    20001: 'x-cp20001', 
    
    20002: 'x_Chinese-Eten', 
    
    20003: 'x-cp20003', 
    
    20004: 'x-cp20004', 
    
    20005: 'x-cp20005', 
    
    20105: 'x-IA5', 
    
    20106: 'x-IA5-German', 
    
    20107: 'x-IA5-Swedish', 
    
    20108: 'x-IA5-Norwegian', 
    20127: 'us-ascii', 
    
    20261: 'x-cp20261', 
    
    20269: 'x-cp20269', 
    20273: 'IBM273', 
    20277: 'cp277', 
    20278: 'cp278', 
    20280: 'cp280', 
    20284: 'cp284', 
    20285: 'cp285', 
    20290: 'cp290', 
    20297: 'cp297', 
    20420: 'cp420', 
    
    20423: 'IBM423', 
    20424: 'IBM424', 
    20833: 'cp833', 
    20838: 'cp838', 
    20866: 'koi8-r', 
    20871: 'cp871', 
    
    20880: 'IBM880', 
    
    20905: 'IBM905', 
    
    20924: 'IBM00924', 
    20932: 'EUC-JP', 
    
    20936: 'x-cp20936', 
    
    20949: 'x-cp20949', 
    21025: 'cp1025', 
    
    21027: '', 
    21866: 'koi8-u', 
    28591: 'iso-8859-1', 
    28592: 'iso-8859-2', 
    28593: 'iso-8859-3', 
    28594: 'iso-8859-4', 
    28595: 'iso-8859-5', 
    28596: 'iso-8859-6', 
    28597: 'iso-8859-7', 
    28598: 'iso-8859-8', 
    28599: 'iso-8859-9', 
    28603: 'iso-8859-13', 
    28605: 'iso-8859-15', 
    
    29001: 'x-Europa', 
    
    38598: 'iso-8859-8-i', 
    50220: 'iso-2022-jp', 
    50221: 'csISO2022JP', 
    50222: 'iso-2022-jp', 
    50225: 'iso-2022-kr', 
    
    50227: 'x-cp50227', 
    
    50229: '', 
    
    50930: '', 
    
    50931: '', 
    
    50933: '', 
    
    50935: '', 
    
    50936: '', 
    
    50937: '', 
    
    50939: '', 
    51932: 'euc-jp', 
    51936: 'EUC-CN', 
    51949: 'euc-kr', 
    
    51950: '', 
    52936: 'hz-gb-2312', 
    54936: 'GB18030', 
    
    57002: 'x-iscii-de', 
    
    57003: 'x-iscii-be', 
    
    57004: 'x-iscii-ta', 
    
    57005: 'x-iscii-te', 
    
    57006: 'x-iscii-as', 
    
    57007: 'x-iscii-or', 
    
    57008: 'x-iscii-ka', 
    
    57009: 'x-iscii-ma', 
    
    57010: 'x-iscii-gu', 
    
    57011: 'x-iscii-pa', 
    65000: 'utf-7', 
    65001: 'utf-8', 
}



def lookupCodePage(id_: int) -> str:
    
    if id_ in _CODE_PAGES:
        if (page := _CODE_PAGES[id_]):
            return page
        else:
            raise UnsupportedEncodingError(f'Code page {id_} is unsupported.')
    else:
        raise UnknownCodepageError(f'Unknown code page {id_}.')

def _lookupEncoding(name):
    return _codecsInfo.get(name)

from .utils import createSBEncoding as _sb, createVBEncoding as _vb
from ._dt import (
        _mac_ce, _mac_cyrillic, _mac_greek, _mac_iceland, _mac_turkish,
        _win874_dec, _win950_dec
    )

_codecsInfo = {
    'x_mac_ce': _sb('x-mac-ce', _mac_ce.decodingTable),
    'x_mac_cyrillic': _sb('x-mac-cyrillic', _mac_cyrillic.decodingTable),
    'x_mac_greek': _sb('x-mac-greek', _mac_greek.decodingTable),
    'x_mac_icelandic': _sb('x-mac-icelandic', _mac_iceland.decodingTable),
    'x_mac_turkish': _sb('x-mac-turkish', _mac_turkish.decodingTable),
    'windows_950': _vb('windows-950', _win950_dec.decodingTable),
    'windows_874': _sb('windows-874', _win874_dec.decodingTable),
}

codecs.register(_lookupEncoding)