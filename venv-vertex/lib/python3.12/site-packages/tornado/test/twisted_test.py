














import sys
import unittest

from tornado.testing import AsyncTestCase, gen_test

try:
    from twisted.internet.defer import inlineCallbacks  

    have_twisted = True
except ImportError:
    have_twisted = False
except Exception:
    
    
    
    if sys.version_info[:2] == (3, 14) and sys.version_info.releaselevel == "alpha":
        have_twisted = False
    else:
        raise
else:
    
    import tornado.platform.twisted  

skipIfNoTwisted = unittest.skipUnless(have_twisted, "twisted module not present")


@skipIfNoTwisted
class ConvertDeferredTest(AsyncTestCase):
    @gen_test
    def test_success(self):
        @inlineCallbacks
        def fn():
            if False:
                
                
                yield
            return 42

        res = yield fn()
        self.assertEqual(res, 42)

    @gen_test
    def test_failure(self):
        @inlineCallbacks
        def fn():
            if False:
                yield
            1 / 0

        with self.assertRaises(ZeroDivisionError):
            yield fn()


if __name__ == "__main__":
    unittest.main()
