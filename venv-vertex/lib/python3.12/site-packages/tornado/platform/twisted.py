












import sys

from twisted.internet.defer import Deferred  
from twisted.python import failure  

from tornado.concurrent import Future, future_set_exc_info
from tornado import gen

import typing  


def install() -> None:
    
    from twisted.internet.asyncioreactor import install  

    install()


if hasattr(gen.convert_yielded, "register"):

    @gen.convert_yielded.register(Deferred)
    def _(d: Deferred) -> Future:
        f = Future()  

        def errback(failure: failure.Failure) -> None:
            try:
                failure.raiseException()
                
                raise Exception("errback called without error")
            except:
                future_set_exc_info(f, sys.exc_info())

        d.addCallbacks(f.set_result, errback)
        return f
