

















import abc
from typing import Any, Callable, Dict, Literal, Union

from vertexai.evaluation import constants
from vertexai.evaluation.metrics import (
    metric_prompt_template as metric_prompt_template_base,
)


class _Metric(abc.ABC):
    

    def __init__(self, metric: str):
        self._metric = metric

    def __str__(self):
        return self.metric_name

    @property
    def metric_name(self) -> str:
        return self._metric


class _ModelBasedMetric(_Metric):
    

    def __init__(
        self,
        *,
        metric: str,
        metric_prompt_template: Union[
            metric_prompt_template_base.PointwiseMetricPromptTemplate,
            metric_prompt_template_base.PairwiseMetricPromptTemplate,
            str,
        ],
    ):
        
        super().__init__(metric=metric)
        self._raw_metric_prompt_template = metric_prompt_template
        self.metric_prompt_template = str(metric_prompt_template)


class CustomMetric(_Metric):
    

    def __init__(
        self,
        name: str,
        metric_function: Callable[
            [Dict[str, Any]],
            Dict[str, Any],
        ],
    ):
        
        super().__init__(name)
        self.name = name
        self.metric_function = metric_function


class _AutomaticMetric(_Metric):
    

    def __init__(
        self,
        metric: Literal[constants.Metric.ROUGE],
    ):
        
        super().__init__(metric=metric)


class _TranslationMetric(_Metric):
    

    def __init__(
        self,
        name: str,
        version: str,
        source_language: str,
        target_language: str,
    ):
        
        self._version = version
        self._source_language = source_language
        self._target_language = target_language

        super().__init__(metric=name)

    @property
    def version(self) -> str:
        return self._version

    @property
    def source_language(self) -> str:
        return self._source_language

    @property
    def target_language(self) -> str:
        return self._target_language
