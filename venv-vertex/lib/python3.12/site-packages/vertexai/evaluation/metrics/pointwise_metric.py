

















from typing import Union

from vertexai.evaluation import constants
from vertexai.evaluation.metrics import _base
from vertexai.evaluation.metrics import (
    metric_prompt_template as metric_prompt_template_base,
)


class PointwiseMetric(_base._ModelBasedMetric):  
    

    def __init__(
        self,
        *,
        metric: str,
        metric_prompt_template: Union[
            metric_prompt_template_base.PointwiseMetricPromptTemplate, str
        ],
    ):
        
        super().__init__(
            metric_prompt_template=metric_prompt_template,
            metric=metric,
        )


class Comet(_base._TranslationMetric):  
    

    _metric_name = constants.Metric.COMET

    def __init__(
        self,
        *,
        version: str = "COMET_22_SRC_REF",
        source_language: str = None,
        target_language: str = None,
    ):
        

        super().__init__(
            name=Comet._metric_name,
            version=version,
            source_language=source_language,
            target_language=target_language,
        )


class MetricX(_base._TranslationMetric):  
    

    _metric_name = constants.Metric.METRICX

    def __init__(
        self,
        *,
        version: str = "METRICX_24_SRC_REF",
        source_language: str = None,
        target_language: str = None,
    ):
        

        super().__init__(
            name=MetricX._metric_name,
            version=version,
            source_language=source_language,
            target_language=target_language,
        )
