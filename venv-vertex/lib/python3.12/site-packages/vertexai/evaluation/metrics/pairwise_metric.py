

















from typing import Callable, Optional, Union

from vertexai import generative_models
from vertexai.evaluation.metrics import _base
from vertexai.evaluation.metrics import (
    metric_prompt_template as metric_prompt_template_base,
)


class PairwiseMetric(_base._ModelBasedMetric):  
    

    def __init__(
        self,
        *,
        metric: str,
        metric_prompt_template: Union[
            metric_prompt_template_base.PairwiseMetricPromptTemplate, str
        ],
        baseline_model: Optional[
            Union[generative_models.GenerativeModel, Callable[[str], str]]
        ] = None,
    ):
        
        super().__init__(
            metric_prompt_template=metric_prompt_template,
            metric=metric,
        )
        self._baseline_model = baseline_model

    @property
    def baseline_model(
        self,
    ) -> Union[generative_models.GenerativeModel, Callable[[str], str]]:
        return self._baseline_model
