

















import re
from typing import Set

_VARIABLE_NAME_REGEX = r"\{([_a-zA-Z][_a-zA-Z0-9]*)\}"


class PromptTemplate:
    

    def __init__(self, template: str):
        
        self.template = str(template)
        self.variables = self._get_variables()

    def _get_variables(self) -> Set[str]:
        
        return set(re.findall(_VARIABLE_NAME_REGEX, self.template))

    def assemble(self, **kwargs) -> "PromptTemplate":
        
        assembled_string = self.template
        for variable_name, value in kwargs.items():
            if variable_name not in self.variables:
                raise ValueError(
                    f"Invalid variable name '{variable_name}'. "
                    f"Valid variables are: {self.variables}"
                )
            placeholder = "{" + variable_name + "}"
            assembled_string = assembled_string.replace(placeholder, str(value))
        return PromptTemplate(assembled_string)

    def __str__(self) -> str:
        
        return self.template

    def __repr__(self) -> str:
        
        return f"PromptTemplate('{self.template}')"
