














from collections import OrderedDict
from typing import Dict, Type, Tuple

from .base import FeatureOnlineStoreServiceTransport
from .grpc import FeatureOnlineStoreServiceGrpcTransport
from .grpc_asyncio import FeatureOnlineStoreServiceGrpcAsyncIOTransport
from .rest import FeatureOnlineStoreServiceRestTransport
from .rest import FeatureOnlineStoreServiceRestInterceptor

ASYNC_REST_CLASSES: Tuple[str, ...]
try:
    from .rest_asyncio import AsyncFeatureOnlineStoreServiceRestTransport
    from .rest_asyncio import AsyncFeatureOnlineStoreServiceRestInterceptor

    ASYNC_REST_CLASSES = (
        "AsyncFeatureOnlineStoreServiceRestTransport",
        "AsyncFeatureOnlineStoreServiceRestInterceptor",
    )
    HAS_REST_ASYNC = True
except ImportError:  
    ASYNC_REST_CLASSES = ()
    HAS_REST_ASYNC = False



_transport_registry = (
    OrderedDict()
)  
_transport_registry["grpc"] = FeatureOnlineStoreServiceGrpcTransport
_transport_registry["grpc_asyncio"] = FeatureOnlineStoreServiceGrpcAsyncIOTransport
_transport_registry["rest"] = FeatureOnlineStoreServiceRestTransport
if HAS_REST_ASYNC:  
    _transport_registry["rest_asyncio"] = AsyncFeatureOnlineStoreServiceRestTransport

__all__ = (
    "FeatureOnlineStoreServiceTransport",
    "FeatureOnlineStoreServiceGrpcTransport",
    "FeatureOnlineStoreServiceGrpcAsyncIOTransport",
    "FeatureOnlineStoreServiceRestTransport",
    "FeatureOnlineStoreServiceRestInterceptor",
) + ASYNC_REST_CLASSES
