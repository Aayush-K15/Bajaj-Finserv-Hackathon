














from collections import OrderedDict
from typing import Dict, Type, Tuple

from .base import ScheduleServiceTransport
from .grpc import ScheduleServiceGrpcTransport
from .grpc_asyncio import ScheduleServiceGrpcAsyncIOTransport
from .rest import ScheduleServiceRestTransport
from .rest import ScheduleServiceRestInterceptor

ASYNC_REST_CLASSES: Tuple[str, ...]
try:
    from .rest_asyncio import AsyncScheduleServiceRestTransport
    from .rest_asyncio import AsyncScheduleServiceRestInterceptor

    ASYNC_REST_CLASSES = (
        "AsyncScheduleServiceRestTransport",
        "AsyncScheduleServiceRestInterceptor",
    )
    HAS_REST_ASYNC = True
except ImportError:  
    ASYNC_REST_CLASSES = ()
    HAS_REST_ASYNC = False



_transport_registry = OrderedDict()  
_transport_registry["grpc"] = ScheduleServiceGrpcTransport
_transport_registry["grpc_asyncio"] = ScheduleServiceGrpcAsyncIOTransport
_transport_registry["rest"] = ScheduleServiceRestTransport
if HAS_REST_ASYNC:  
    _transport_registry["rest_asyncio"] = AsyncScheduleServiceRestTransport

__all__ = (
    "ScheduleServiceTransport",
    "ScheduleServiceGrpcTransport",
    "ScheduleServiceGrpcAsyncIOTransport",
    "ScheduleServiceRestTransport",
    "ScheduleServiceRestInterceptor",
) + ASYNC_REST_CLASSES
