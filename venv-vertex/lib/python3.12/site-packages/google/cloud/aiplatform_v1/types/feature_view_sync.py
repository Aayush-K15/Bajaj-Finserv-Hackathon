














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.protobuf import timestamp_pb2  
from google.rpc import status_pb2  
from google.type import interval_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1",
    manifest={
        "FeatureViewSync",
    },
)


class FeatureViewSync(proto.Message):
    r

    class SyncSummary(proto.Message):
        r

        row_synced: int = proto.Field(
            proto.INT64,
            number=1,
        )
        total_slot: int = proto.Field(
            proto.INT64,
            number=2,
        )
        system_watermark_time: timestamp_pb2.Timestamp = proto.Field(
            proto.MESSAGE,
            number=5,
            message=timestamp_pb2.Timestamp,
        )

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=2,
        message=timestamp_pb2.Timestamp,
    )
    run_time: interval_pb2.Interval = proto.Field(
        proto.MESSAGE,
        number=5,
        message=interval_pb2.Interval,
    )
    final_status: status_pb2.Status = proto.Field(
        proto.MESSAGE,
        number=4,
        message=status_pb2.Status,
    )
    sync_summary: SyncSummary = proto.Field(
        proto.MESSAGE,
        number=6,
        message=SyncSummary,
    )
    satisfies_pzs: bool = proto.Field(
        proto.BOOL,
        number=7,
    )
    satisfies_pzi: bool = proto.Field(
        proto.BOOL,
        number=8,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
