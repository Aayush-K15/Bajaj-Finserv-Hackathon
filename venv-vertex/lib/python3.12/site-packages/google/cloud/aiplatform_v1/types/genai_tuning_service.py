














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1.types import io
from google.cloud.aiplatform_v1.types import operation
from google.cloud.aiplatform_v1.types import tuning_job as gca_tuning_job


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1",
    manifest={
        "CreateTuningJobRequest",
        "GetTuningJobRequest",
        "ListTuningJobsRequest",
        "ListTuningJobsResponse",
        "CancelTuningJobRequest",
        "RebaseTunedModelRequest",
        "RebaseTunedModelOperationMetadata",
    },
)


class CreateTuningJobRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    tuning_job: gca_tuning_job.TuningJob = proto.Field(
        proto.MESSAGE,
        number=2,
        message=gca_tuning_job.TuningJob,
    )


class GetTuningJobRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class ListTuningJobsRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=4,
    )


class ListTuningJobsResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    tuning_jobs: MutableSequence[gca_tuning_job.TuningJob] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_tuning_job.TuningJob,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class CancelTuningJobRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class RebaseTunedModelRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    tuned_model_ref: gca_tuning_job.TunedModelRef = proto.Field(
        proto.MESSAGE,
        number=2,
        message=gca_tuning_job.TunedModelRef,
    )
    tuning_job: gca_tuning_job.TuningJob = proto.Field(
        proto.MESSAGE,
        number=3,
        message=gca_tuning_job.TuningJob,
    )
    artifact_destination: io.GcsDestination = proto.Field(
        proto.MESSAGE,
        number=4,
        message=io.GcsDestination,
    )
    deploy_to_same_endpoint: bool = proto.Field(
        proto.BOOL,
        number=5,
    )


class RebaseTunedModelOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
