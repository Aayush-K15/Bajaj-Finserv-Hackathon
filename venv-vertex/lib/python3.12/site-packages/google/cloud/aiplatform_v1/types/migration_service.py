














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1.types import (
    migratable_resource as gca_migratable_resource,
)
from google.cloud.aiplatform_v1.types import operation
from google.rpc import status_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1",
    manifest={
        "SearchMigratableResourcesRequest",
        "SearchMigratableResourcesResponse",
        "BatchMigrateResourcesRequest",
        "MigrateResourceRequest",
        "BatchMigrateResourcesResponse",
        "MigrateResourceResponse",
        "BatchMigrateResourcesOperationMetadata",
    },
)


class SearchMigratableResourcesRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=2,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=3,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=4,
    )


class SearchMigratableResourcesResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    migratable_resources: MutableSequence[
        gca_migratable_resource.MigratableResource
    ] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_migratable_resource.MigratableResource,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class BatchMigrateResourcesRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    migrate_resource_requests: MutableSequence[
        "MigrateResourceRequest"
    ] = proto.RepeatedField(
        proto.MESSAGE,
        number=2,
        message="MigrateResourceRequest",
    )


class MigrateResourceRequest(proto.Message):
    r

    class MigrateMlEngineModelVersionConfig(proto.Message):
        r

        endpoint: str = proto.Field(
            proto.STRING,
            number=1,
        )
        model_version: str = proto.Field(
            proto.STRING,
            number=2,
        )
        model_display_name: str = proto.Field(
            proto.STRING,
            number=3,
        )

    class MigrateAutomlModelConfig(proto.Message):
        r

        model: str = proto.Field(
            proto.STRING,
            number=1,
        )
        model_display_name: str = proto.Field(
            proto.STRING,
            number=2,
        )

    class MigrateAutomlDatasetConfig(proto.Message):
        r

        dataset: str = proto.Field(
            proto.STRING,
            number=1,
        )
        dataset_display_name: str = proto.Field(
            proto.STRING,
            number=2,
        )

    class MigrateDataLabelingDatasetConfig(proto.Message):
        r

        class MigrateDataLabelingAnnotatedDatasetConfig(proto.Message):
            r

            annotated_dataset: str = proto.Field(
                proto.STRING,
                number=1,
            )

        dataset: str = proto.Field(
            proto.STRING,
            number=1,
        )
        dataset_display_name: str = proto.Field(
            proto.STRING,
            number=2,
        )
        migrate_data_labeling_annotated_dataset_configs: MutableSequence[
            "MigrateResourceRequest.MigrateDataLabelingDatasetConfig.MigrateDataLabelingAnnotatedDatasetConfig"
        ] = proto.RepeatedField(
            proto.MESSAGE,
            number=3,
            message="MigrateResourceRequest.MigrateDataLabelingDatasetConfig.MigrateDataLabelingAnnotatedDatasetConfig",
        )

    migrate_ml_engine_model_version_config: MigrateMlEngineModelVersionConfig = (
        proto.Field(
            proto.MESSAGE,
            number=1,
            oneof="request",
            message=MigrateMlEngineModelVersionConfig,
        )
    )
    migrate_automl_model_config: MigrateAutomlModelConfig = proto.Field(
        proto.MESSAGE,
        number=2,
        oneof="request",
        message=MigrateAutomlModelConfig,
    )
    migrate_automl_dataset_config: MigrateAutomlDatasetConfig = proto.Field(
        proto.MESSAGE,
        number=3,
        oneof="request",
        message=MigrateAutomlDatasetConfig,
    )
    migrate_data_labeling_dataset_config: MigrateDataLabelingDatasetConfig = (
        proto.Field(
            proto.MESSAGE,
            number=4,
            oneof="request",
            message=MigrateDataLabelingDatasetConfig,
        )
    )


class BatchMigrateResourcesResponse(proto.Message):
    r

    migrate_resource_responses: MutableSequence[
        "MigrateResourceResponse"
    ] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message="MigrateResourceResponse",
    )


class MigrateResourceResponse(proto.Message):
    r

    dataset: str = proto.Field(
        proto.STRING,
        number=1,
        oneof="migrated_resource",
    )
    model: str = proto.Field(
        proto.STRING,
        number=2,
        oneof="migrated_resource",
    )
    migratable_resource: gca_migratable_resource.MigratableResource = proto.Field(
        proto.MESSAGE,
        number=3,
        message=gca_migratable_resource.MigratableResource,
    )


class BatchMigrateResourcesOperationMetadata(proto.Message):
    r

    class PartialResult(proto.Message):
        r

        error: status_pb2.Status = proto.Field(
            proto.MESSAGE,
            number=2,
            oneof="result",
            message=status_pb2.Status,
        )
        model: str = proto.Field(
            proto.STRING,
            number=3,
            oneof="result",
        )
        dataset: str = proto.Field(
            proto.STRING,
            number=4,
            oneof="result",
        )
        request: "MigrateResourceRequest" = proto.Field(
            proto.MESSAGE,
            number=1,
            message="MigrateResourceRequest",
        )

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )
    partial_results: MutableSequence[PartialResult] = proto.RepeatedField(
        proto.MESSAGE,
        number=2,
        message=PartialResult,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
