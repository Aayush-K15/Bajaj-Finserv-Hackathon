














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1.types import artifact
from google.cloud.aiplatform_v1.types import context
from google.cloud.aiplatform_v1.types import encryption_spec as gca_encryption_spec
from google.cloud.aiplatform_v1.types import execution as gca_execution
from google.cloud.aiplatform_v1.types import pipeline_failure_policy
from google.cloud.aiplatform_v1.types import pipeline_state
from google.cloud.aiplatform_v1.types import service_networking
from google.cloud.aiplatform_v1.types import value as gca_value
from google.protobuf import struct_pb2  
from google.protobuf import timestamp_pb2  
from google.rpc import status_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1",
    manifest={
        "PipelineJob",
        "PipelineTemplateMetadata",
        "PipelineJobDetail",
        "PipelineTaskDetail",
        "PipelineTaskExecutorDetail",
    },
)


class PipelineJob(proto.Message):
    r

    class RuntimeConfig(proto.Message):
        r

        class InputArtifact(proto.Message):
            r

            artifact_id: str = proto.Field(
                proto.STRING,
                number=1,
                oneof="kind",
            )

        parameters: MutableMapping[str, gca_value.Value] = proto.MapField(
            proto.STRING,
            proto.MESSAGE,
            number=1,
            message=gca_value.Value,
        )
        gcs_output_directory: str = proto.Field(
            proto.STRING,
            number=2,
        )
        parameter_values: MutableMapping[str, struct_pb2.Value] = proto.MapField(
            proto.STRING,
            proto.MESSAGE,
            number=3,
            message=struct_pb2.Value,
        )
        failure_policy: pipeline_failure_policy.PipelineFailurePolicy = proto.Field(
            proto.ENUM,
            number=4,
            enum=pipeline_failure_policy.PipelineFailurePolicy,
        )
        input_artifacts: MutableMapping[
            str, "PipelineJob.RuntimeConfig.InputArtifact"
        ] = proto.MapField(
            proto.STRING,
            proto.MESSAGE,
            number=5,
            message="PipelineJob.RuntimeConfig.InputArtifact",
        )

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=2,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=3,
        message=timestamp_pb2.Timestamp,
    )
    start_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=4,
        message=timestamp_pb2.Timestamp,
    )
    end_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=5,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=6,
        message=timestamp_pb2.Timestamp,
    )
    pipeline_spec: struct_pb2.Struct = proto.Field(
        proto.MESSAGE,
        number=7,
        message=struct_pb2.Struct,
    )
    state: pipeline_state.PipelineState = proto.Field(
        proto.ENUM,
        number=8,
        enum=pipeline_state.PipelineState,
    )
    job_detail: "PipelineJobDetail" = proto.Field(
        proto.MESSAGE,
        number=9,
        message="PipelineJobDetail",
    )
    error: status_pb2.Status = proto.Field(
        proto.MESSAGE,
        number=10,
        message=status_pb2.Status,
    )
    labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=11,
    )
    runtime_config: RuntimeConfig = proto.Field(
        proto.MESSAGE,
        number=12,
        message=RuntimeConfig,
    )
    encryption_spec: gca_encryption_spec.EncryptionSpec = proto.Field(
        proto.MESSAGE,
        number=16,
        message=gca_encryption_spec.EncryptionSpec,
    )
    service_account: str = proto.Field(
        proto.STRING,
        number=17,
    )
    network: str = proto.Field(
        proto.STRING,
        number=18,
    )
    reserved_ip_ranges: MutableSequence[str] = proto.RepeatedField(
        proto.STRING,
        number=25,
    )
    psc_interface_config: service_networking.PscInterfaceConfig = proto.Field(
        proto.MESSAGE,
        number=31,
        message=service_networking.PscInterfaceConfig,
    )
    template_uri: str = proto.Field(
        proto.STRING,
        number=19,
    )
    template_metadata: "PipelineTemplateMetadata" = proto.Field(
        proto.MESSAGE,
        number=20,
        message="PipelineTemplateMetadata",
    )
    schedule_name: str = proto.Field(
        proto.STRING,
        number=22,
    )
    preflight_validations: bool = proto.Field(
        proto.BOOL,
        number=26,
    )


class PipelineTemplateMetadata(proto.Message):
    r

    version: str = proto.Field(
        proto.STRING,
        number=3,
    )


class PipelineJobDetail(proto.Message):
    r

    pipeline_context: context.Context = proto.Field(
        proto.MESSAGE,
        number=1,
        message=context.Context,
    )
    pipeline_run_context: context.Context = proto.Field(
        proto.MESSAGE,
        number=2,
        message=context.Context,
    )
    task_details: MutableSequence["PipelineTaskDetail"] = proto.RepeatedField(
        proto.MESSAGE,
        number=3,
        message="PipelineTaskDetail",
    )


class PipelineTaskDetail(proto.Message):
    r

    class State(proto.Enum):
        r
        STATE_UNSPECIFIED = 0
        PENDING = 1
        RUNNING = 2
        SUCCEEDED = 3
        CANCEL_PENDING = 4
        CANCELLING = 5
        CANCELLED = 6
        FAILED = 7
        SKIPPED = 8
        NOT_TRIGGERED = 9

    class PipelineTaskStatus(proto.Message):
        r

        update_time: timestamp_pb2.Timestamp = proto.Field(
            proto.MESSAGE,
            number=1,
            message=timestamp_pb2.Timestamp,
        )
        state: "PipelineTaskDetail.State" = proto.Field(
            proto.ENUM,
            number=2,
            enum="PipelineTaskDetail.State",
        )
        error: status_pb2.Status = proto.Field(
            proto.MESSAGE,
            number=3,
            message=status_pb2.Status,
        )

    class ArtifactList(proto.Message):
        r

        artifacts: MutableSequence[artifact.Artifact] = proto.RepeatedField(
            proto.MESSAGE,
            number=1,
            message=artifact.Artifact,
        )

    task_id: int = proto.Field(
        proto.INT64,
        number=1,
    )
    parent_task_id: int = proto.Field(
        proto.INT64,
        number=12,
    )
    task_name: str = proto.Field(
        proto.STRING,
        number=2,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=3,
        message=timestamp_pb2.Timestamp,
    )
    start_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=4,
        message=timestamp_pb2.Timestamp,
    )
    end_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=5,
        message=timestamp_pb2.Timestamp,
    )
    executor_detail: "PipelineTaskExecutorDetail" = proto.Field(
        proto.MESSAGE,
        number=6,
        message="PipelineTaskExecutorDetail",
    )
    state: State = proto.Field(
        proto.ENUM,
        number=7,
        enum=State,
    )
    execution: gca_execution.Execution = proto.Field(
        proto.MESSAGE,
        number=8,
        message=gca_execution.Execution,
    )
    error: status_pb2.Status = proto.Field(
        proto.MESSAGE,
        number=9,
        message=status_pb2.Status,
    )
    pipeline_task_status: MutableSequence[PipelineTaskStatus] = proto.RepeatedField(
        proto.MESSAGE,
        number=13,
        message=PipelineTaskStatus,
    )
    inputs: MutableMapping[str, ArtifactList] = proto.MapField(
        proto.STRING,
        proto.MESSAGE,
        number=10,
        message=ArtifactList,
    )
    outputs: MutableMapping[str, ArtifactList] = proto.MapField(
        proto.STRING,
        proto.MESSAGE,
        number=11,
        message=ArtifactList,
    )
    task_unique_name: str = proto.Field(
        proto.STRING,
        number=14,
    )


class PipelineTaskExecutorDetail(proto.Message):
    r

    class ContainerDetail(proto.Message):
        r

        main_job: str = proto.Field(
            proto.STRING,
            number=1,
        )
        pre_caching_check_job: str = proto.Field(
            proto.STRING,
            number=2,
        )
        failed_main_jobs: MutableSequence[str] = proto.RepeatedField(
            proto.STRING,
            number=3,
        )
        failed_pre_caching_check_jobs: MutableSequence[str] = proto.RepeatedField(
            proto.STRING,
            number=4,
        )

    class CustomJobDetail(proto.Message):
        r

        job: str = proto.Field(
            proto.STRING,
            number=1,
        )
        failed_jobs: MutableSequence[str] = proto.RepeatedField(
            proto.STRING,
            number=3,
        )

    container_detail: ContainerDetail = proto.Field(
        proto.MESSAGE,
        number=1,
        oneof="details",
        message=ContainerDetail,
    )
    custom_job_detail: CustomJobDetail = proto.Field(
        proto.MESSAGE,
        number=2,
        oneof="details",
        message=CustomJobDetail,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
