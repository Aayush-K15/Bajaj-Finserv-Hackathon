














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1.types import operation
from google.cloud.aiplatform_v1.types import pipeline_job as gca_pipeline_job
from google.cloud.aiplatform_v1.types import training_pipeline as gca_training_pipeline
from google.protobuf import field_mask_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1",
    manifest={
        "BatchCancelPipelineJobsOperationMetadata",
        "CreateTrainingPipelineRequest",
        "GetTrainingPipelineRequest",
        "ListTrainingPipelinesRequest",
        "ListTrainingPipelinesResponse",
        "DeleteTrainingPipelineRequest",
        "CancelTrainingPipelineRequest",
        "CreatePipelineJobRequest",
        "GetPipelineJobRequest",
        "ListPipelineJobsRequest",
        "ListPipelineJobsResponse",
        "DeletePipelineJobRequest",
        "BatchDeletePipelineJobsRequest",
        "BatchDeletePipelineJobsResponse",
        "CancelPipelineJobRequest",
        "BatchCancelPipelineJobsRequest",
        "BatchCancelPipelineJobsResponse",
    },
)


class BatchCancelPipelineJobsOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


class CreateTrainingPipelineRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    training_pipeline: gca_training_pipeline.TrainingPipeline = proto.Field(
        proto.MESSAGE,
        number=2,
        message=gca_training_pipeline.TrainingPipeline,
    )


class GetTrainingPipelineRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class ListTrainingPipelinesRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=4,
    )
    read_mask: field_mask_pb2.FieldMask = proto.Field(
        proto.MESSAGE,
        number=5,
        message=field_mask_pb2.FieldMask,
    )


class ListTrainingPipelinesResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    training_pipelines: MutableSequence[
        gca_training_pipeline.TrainingPipeline
    ] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_training_pipeline.TrainingPipeline,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class DeleteTrainingPipelineRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class CancelTrainingPipelineRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class CreatePipelineJobRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    pipeline_job: gca_pipeline_job.PipelineJob = proto.Field(
        proto.MESSAGE,
        number=2,
        message=gca_pipeline_job.PipelineJob,
    )
    pipeline_job_id: str = proto.Field(
        proto.STRING,
        number=3,
    )


class GetPipelineJobRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class ListPipelineJobsRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=4,
    )
    order_by: str = proto.Field(
        proto.STRING,
        number=6,
    )
    read_mask: field_mask_pb2.FieldMask = proto.Field(
        proto.MESSAGE,
        number=7,
        message=field_mask_pb2.FieldMask,
    )


class ListPipelineJobsResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    pipeline_jobs: MutableSequence[gca_pipeline_job.PipelineJob] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_pipeline_job.PipelineJob,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class DeletePipelineJobRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class BatchDeletePipelineJobsRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    names: MutableSequence[str] = proto.RepeatedField(
        proto.STRING,
        number=2,
    )


class BatchDeletePipelineJobsResponse(proto.Message):
    r

    pipeline_jobs: MutableSequence[gca_pipeline_job.PipelineJob] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_pipeline_job.PipelineJob,
    )


class CancelPipelineJobRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class BatchCancelPipelineJobsRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    names: MutableSequence[str] = proto.RepeatedField(
        proto.STRING,
        number=2,
    )


class BatchCancelPipelineJobsResponse(proto.Message):
    r

    pipeline_jobs: MutableSequence[gca_pipeline_job.PipelineJob] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_pipeline_job.PipelineJob,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
