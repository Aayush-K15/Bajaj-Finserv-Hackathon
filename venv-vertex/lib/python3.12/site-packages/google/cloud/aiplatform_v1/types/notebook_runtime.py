














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1.types import encryption_spec as gca_encryption_spec
from google.cloud.aiplatform_v1.types import machine_resources
from google.cloud.aiplatform_v1.types import network_spec as gca_network_spec
from google.cloud.aiplatform_v1.types import notebook_euc_config
from google.cloud.aiplatform_v1.types import notebook_idle_shutdown_config
from google.cloud.aiplatform_v1.types import (
    notebook_runtime_template_ref as gca_notebook_runtime_template_ref,
)
from google.cloud.aiplatform_v1.types import notebook_software_config
from google.protobuf import timestamp_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1",
    manifest={
        "NotebookRuntimeType",
        "NotebookRuntimeTemplate",
        "NotebookRuntime",
    },
)


class NotebookRuntimeType(proto.Enum):
    r
    NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED = 0
    USER_DEFINED = 1
    ONE_CLICK = 2


class NotebookRuntimeTemplate(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=2,
    )
    description: str = proto.Field(
        proto.STRING,
        number=3,
    )
    is_default: bool = proto.Field(
        proto.BOOL,
        number=4,
    )
    machine_spec: machine_resources.MachineSpec = proto.Field(
        proto.MESSAGE,
        number=5,
        message=machine_resources.MachineSpec,
    )
    data_persistent_disk_spec: machine_resources.PersistentDiskSpec = proto.Field(
        proto.MESSAGE,
        number=8,
        message=machine_resources.PersistentDiskSpec,
    )
    network_spec: gca_network_spec.NetworkSpec = proto.Field(
        proto.MESSAGE,
        number=12,
        message=gca_network_spec.NetworkSpec,
    )
    service_account: str = proto.Field(
        proto.STRING,
        number=13,
    )
    etag: str = proto.Field(
        proto.STRING,
        number=14,
    )
    labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=15,
    )
    idle_shutdown_config: notebook_idle_shutdown_config.NotebookIdleShutdownConfig = (
        proto.Field(
            proto.MESSAGE,
            number=17,
            message=notebook_idle_shutdown_config.NotebookIdleShutdownConfig,
        )
    )
    euc_config: notebook_euc_config.NotebookEucConfig = proto.Field(
        proto.MESSAGE,
        number=18,
        message=notebook_euc_config.NotebookEucConfig,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=10,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=11,
        message=timestamp_pb2.Timestamp,
    )
    notebook_runtime_type: "NotebookRuntimeType" = proto.Field(
        proto.ENUM,
        number=19,
        enum="NotebookRuntimeType",
    )
    shielded_vm_config: machine_resources.ShieldedVmConfig = proto.Field(
        proto.MESSAGE,
        number=20,
        message=machine_resources.ShieldedVmConfig,
    )
    network_tags: MutableSequence[str] = proto.RepeatedField(
        proto.STRING,
        number=21,
    )
    encryption_spec: gca_encryption_spec.EncryptionSpec = proto.Field(
        proto.MESSAGE,
        number=23,
        message=gca_encryption_spec.EncryptionSpec,
    )
    software_config: notebook_software_config.NotebookSoftwareConfig = proto.Field(
        proto.MESSAGE,
        number=24,
        message=notebook_software_config.NotebookSoftwareConfig,
    )


class NotebookRuntime(proto.Message):
    r

    class HealthState(proto.Enum):
        r
        HEALTH_STATE_UNSPECIFIED = 0
        HEALTHY = 1
        UNHEALTHY = 2

    class RuntimeState(proto.Enum):
        r
        RUNTIME_STATE_UNSPECIFIED = 0
        RUNNING = 1
        BEING_STARTED = 2
        BEING_STOPPED = 3
        STOPPED = 4
        BEING_UPGRADED = 5
        ERROR = 100
        INVALID = 101

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    runtime_user: str = proto.Field(
        proto.STRING,
        number=2,
    )
    notebook_runtime_template_ref: gca_notebook_runtime_template_ref.NotebookRuntimeTemplateRef = proto.Field(
        proto.MESSAGE,
        number=3,
        message=gca_notebook_runtime_template_ref.NotebookRuntimeTemplateRef,
    )
    proxy_uri: str = proto.Field(
        proto.STRING,
        number=5,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=6,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=7,
        message=timestamp_pb2.Timestamp,
    )
    health_state: HealthState = proto.Field(
        proto.ENUM,
        number=8,
        enum=HealthState,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=10,
    )
    description: str = proto.Field(
        proto.STRING,
        number=11,
    )
    service_account: str = proto.Field(
        proto.STRING,
        number=13,
    )
    runtime_state: RuntimeState = proto.Field(
        proto.ENUM,
        number=14,
        enum=RuntimeState,
    )
    is_upgradable: bool = proto.Field(
        proto.BOOL,
        number=15,
    )
    labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=16,
    )
    expiration_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=17,
        message=timestamp_pb2.Timestamp,
    )
    version: str = proto.Field(
        proto.STRING,
        number=18,
    )
    notebook_runtime_type: "NotebookRuntimeType" = proto.Field(
        proto.ENUM,
        number=19,
        enum="NotebookRuntimeType",
    )
    machine_spec: machine_resources.MachineSpec = proto.Field(
        proto.MESSAGE,
        number=20,
        message=machine_resources.MachineSpec,
    )
    data_persistent_disk_spec: machine_resources.PersistentDiskSpec = proto.Field(
        proto.MESSAGE,
        number=21,
        message=machine_resources.PersistentDiskSpec,
    )
    network_spec: gca_network_spec.NetworkSpec = proto.Field(
        proto.MESSAGE,
        number=22,
        message=gca_network_spec.NetworkSpec,
    )
    idle_shutdown_config: notebook_idle_shutdown_config.NotebookIdleShutdownConfig = (
        proto.Field(
            proto.MESSAGE,
            number=23,
            message=notebook_idle_shutdown_config.NotebookIdleShutdownConfig,
        )
    )
    euc_config: notebook_euc_config.NotebookEucConfig = proto.Field(
        proto.MESSAGE,
        number=24,
        message=notebook_euc_config.NotebookEucConfig,
    )
    shielded_vm_config: machine_resources.ShieldedVmConfig = proto.Field(
        proto.MESSAGE,
        number=32,
        message=machine_resources.ShieldedVmConfig,
    )
    network_tags: MutableSequence[str] = proto.RepeatedField(
        proto.STRING,
        number=25,
    )
    software_config: notebook_software_config.NotebookSoftwareConfig = proto.Field(
        proto.MESSAGE,
        number=31,
        message=notebook_software_config.NotebookSoftwareConfig,
    )
    encryption_spec: gca_encryption_spec.EncryptionSpec = proto.Field(
        proto.MESSAGE,
        number=28,
        message=gca_encryption_spec.EncryptionSpec,
    )
    satisfies_pzs: bool = proto.Field(
        proto.BOOL,
        number=29,
    )
    satisfies_pzi: bool = proto.Field(
        proto.BOOL,
        number=30,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
