














from __future__ import annotations

from typing import MutableMapping, MutableSequence

from google.protobuf import timestamp_pb2  
import proto  

__protobuf__ = proto.module(
    package="google.cloud.resourcemanager.v3",
    manifest={
        "TagHold",
        "CreateTagHoldRequest",
        "CreateTagHoldMetadata",
        "DeleteTagHoldRequest",
        "DeleteTagHoldMetadata",
        "ListTagHoldsRequest",
        "ListTagHoldsResponse",
    },
)


class TagHold(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    holder: str = proto.Field(
        proto.STRING,
        number=2,
    )
    origin: str = proto.Field(
        proto.STRING,
        number=3,
    )
    help_link: str = proto.Field(
        proto.STRING,
        number=4,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=5,
        message=timestamp_pb2.Timestamp,
    )


class CreateTagHoldRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    tag_hold: "TagHold" = proto.Field(
        proto.MESSAGE,
        number=2,
        message="TagHold",
    )
    validate_only: bool = proto.Field(
        proto.BOOL,
        number=3,
    )


class CreateTagHoldMetadata(proto.Message):
    r


class DeleteTagHoldRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    validate_only: bool = proto.Field(
        proto.BOOL,
        number=2,
    )


class DeleteTagHoldMetadata(proto.Message):
    r


class ListTagHoldsRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=2,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=3,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=4,
    )


class ListTagHoldsResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    tag_holds: MutableSequence["TagHold"] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message="TagHold",
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
