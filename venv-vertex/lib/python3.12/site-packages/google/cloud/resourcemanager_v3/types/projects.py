














from __future__ import annotations

from typing import MutableMapping, MutableSequence

from google.protobuf import field_mask_pb2  
from google.protobuf import timestamp_pb2  
import proto  

__protobuf__ = proto.module(
    package="google.cloud.resourcemanager.v3",
    manifest={
        "Project",
        "GetProjectRequest",
        "ListProjectsRequest",
        "ListProjectsResponse",
        "SearchProjectsRequest",
        "SearchProjectsResponse",
        "CreateProjectRequest",
        "CreateProjectMetadata",
        "UpdateProjectRequest",
        "UpdateProjectMetadata",
        "MoveProjectRequest",
        "MoveProjectMetadata",
        "DeleteProjectRequest",
        "DeleteProjectMetadata",
        "UndeleteProjectRequest",
        "UndeleteProjectMetadata",
    },
)


class Project(proto.Message):
    r

    class State(proto.Enum):
        r
        STATE_UNSPECIFIED = 0
        ACTIVE = 1
        DELETE_REQUESTED = 2

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    parent: str = proto.Field(
        proto.STRING,
        number=2,
    )
    project_id: str = proto.Field(
        proto.STRING,
        number=3,
    )
    state: State = proto.Field(
        proto.ENUM,
        number=4,
        enum=State,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=5,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=6,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=7,
        message=timestamp_pb2.Timestamp,
    )
    delete_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=8,
        message=timestamp_pb2.Timestamp,
    )
    etag: str = proto.Field(
        proto.STRING,
        number=9,
    )
    labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=10,
    )


class GetProjectRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class ListProjectsRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    show_deleted: bool = proto.Field(
        proto.BOOL,
        number=4,
    )


class ListProjectsResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    projects: MutableSequence["Project"] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message="Project",
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class SearchProjectsRequest(proto.Message):
    r

    query: str = proto.Field(
        proto.STRING,
        number=1,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )


class SearchProjectsResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    projects: MutableSequence["Project"] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message="Project",
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class CreateProjectRequest(proto.Message):
    r

    project: "Project" = proto.Field(
        proto.MESSAGE,
        number=1,
        message="Project",
    )


class CreateProjectMetadata(proto.Message):
    r

    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=1,
        message=timestamp_pb2.Timestamp,
    )
    gettable: bool = proto.Field(
        proto.BOOL,
        number=2,
    )
    ready: bool = proto.Field(
        proto.BOOL,
        number=3,
    )


class UpdateProjectRequest(proto.Message):
    r

    project: "Project" = proto.Field(
        proto.MESSAGE,
        number=1,
        message="Project",
    )
    update_mask: field_mask_pb2.FieldMask = proto.Field(
        proto.MESSAGE,
        number=2,
        message=field_mask_pb2.FieldMask,
    )


class UpdateProjectMetadata(proto.Message):
    r


class MoveProjectRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    destination_parent: str = proto.Field(
        proto.STRING,
        number=2,
    )


class MoveProjectMetadata(proto.Message):
    r


class DeleteProjectRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class DeleteProjectMetadata(proto.Message):
    r


class UndeleteProjectRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class UndeleteProjectMetadata(proto.Message):
    r


__all__ = tuple(sorted(__protobuf__.manifest))
