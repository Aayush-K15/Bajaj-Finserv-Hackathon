














from collections import OrderedDict
from typing import Dict, Type, Tuple

from .base import ExampleStoreServiceTransport
from .grpc import ExampleStoreServiceGrpcTransport
from .grpc_asyncio import ExampleStoreServiceGrpcAsyncIOTransport
from .rest import ExampleStoreServiceRestTransport
from .rest import ExampleStoreServiceRestInterceptor

ASYNC_REST_CLASSES: Tuple[str, ...]
try:
    from .rest_asyncio import AsyncExampleStoreServiceRestTransport
    from .rest_asyncio import AsyncExampleStoreServiceRestInterceptor

    ASYNC_REST_CLASSES = (
        "AsyncExampleStoreServiceRestTransport",
        "AsyncExampleStoreServiceRestInterceptor",
    )
    HAS_REST_ASYNC = True
except ImportError:  
    ASYNC_REST_CLASSES = ()
    HAS_REST_ASYNC = False



_transport_registry = (
    OrderedDict()
)  
_transport_registry["grpc"] = ExampleStoreServiceGrpcTransport
_transport_registry["grpc_asyncio"] = ExampleStoreServiceGrpcAsyncIOTransport
_transport_registry["rest"] = ExampleStoreServiceRestTransport
if HAS_REST_ASYNC:  
    _transport_registry["rest_asyncio"] = AsyncExampleStoreServiceRestTransport

__all__ = (
    "ExampleStoreServiceTransport",
    "ExampleStoreServiceGrpcTransport",
    "ExampleStoreServiceGrpcAsyncIOTransport",
    "ExampleStoreServiceRestTransport",
    "ExampleStoreServiceRestInterceptor",
) + ASYNC_REST_CLASSES
