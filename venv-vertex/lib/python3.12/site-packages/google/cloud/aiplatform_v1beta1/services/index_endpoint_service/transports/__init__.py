














from collections import OrderedDict
from typing import Dict, Type, Tuple

from .base import IndexEndpointServiceTransport
from .grpc import IndexEndpointServiceGrpcTransport
from .grpc_asyncio import IndexEndpointServiceGrpcAsyncIOTransport
from .rest import IndexEndpointServiceRestTransport
from .rest import IndexEndpointServiceRestInterceptor

ASYNC_REST_CLASSES: Tuple[str, ...]
try:
    from .rest_asyncio import AsyncIndexEndpointServiceRestTransport
    from .rest_asyncio import AsyncIndexEndpointServiceRestInterceptor

    ASYNC_REST_CLASSES = (
        "AsyncIndexEndpointServiceRestTransport",
        "AsyncIndexEndpointServiceRestInterceptor",
    )
    HAS_REST_ASYNC = True
except ImportError:  
    ASYNC_REST_CLASSES = ()
    HAS_REST_ASYNC = False



_transport_registry = (
    OrderedDict()
)  
_transport_registry["grpc"] = IndexEndpointServiceGrpcTransport
_transport_registry["grpc_asyncio"] = IndexEndpointServiceGrpcAsyncIOTransport
_transport_registry["rest"] = IndexEndpointServiceRestTransport
if HAS_REST_ASYNC:  
    _transport_registry["rest_asyncio"] = AsyncIndexEndpointServiceRestTransport

__all__ = (
    "IndexEndpointServiceTransport",
    "IndexEndpointServiceGrpcTransport",
    "IndexEndpointServiceGrpcAsyncIOTransport",
    "IndexEndpointServiceRestTransport",
    "IndexEndpointServiceRestInterceptor",
) + ASYNC_REST_CLASSES
