














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import encryption_spec as gca_encryption_spec
from google.cloud.aiplatform_v1beta1.types import io
from google.cloud.aiplatform_v1beta1.types import model
from google.cloud.aiplatform_v1beta1.types import pipeline_state
from google.protobuf import struct_pb2  
from google.protobuf import timestamp_pb2  
from google.rpc import status_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "TrainingPipeline",
        "InputDataConfig",
        "FractionSplit",
        "FilterSplit",
        "PredefinedSplit",
        "TimestampSplit",
        "StratifiedSplit",
    },
)


class TrainingPipeline(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=2,
    )
    input_data_config: "InputDataConfig" = proto.Field(
        proto.MESSAGE,
        number=3,
        message="InputDataConfig",
    )
    training_task_definition: str = proto.Field(
        proto.STRING,
        number=4,
    )
    training_task_inputs: struct_pb2.Value = proto.Field(
        proto.MESSAGE,
        number=5,
        message=struct_pb2.Value,
    )
    training_task_metadata: struct_pb2.Value = proto.Field(
        proto.MESSAGE,
        number=6,
        message=struct_pb2.Value,
    )
    model_to_upload: model.Model = proto.Field(
        proto.MESSAGE,
        number=7,
        message=model.Model,
    )
    model_id: str = proto.Field(
        proto.STRING,
        number=22,
    )
    parent_model: str = proto.Field(
        proto.STRING,
        number=21,
    )
    state: pipeline_state.PipelineState = proto.Field(
        proto.ENUM,
        number=9,
        enum=pipeline_state.PipelineState,
    )
    error: status_pb2.Status = proto.Field(
        proto.MESSAGE,
        number=10,
        message=status_pb2.Status,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=11,
        message=timestamp_pb2.Timestamp,
    )
    start_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=12,
        message=timestamp_pb2.Timestamp,
    )
    end_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=13,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=14,
        message=timestamp_pb2.Timestamp,
    )
    labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=15,
    )
    encryption_spec: gca_encryption_spec.EncryptionSpec = proto.Field(
        proto.MESSAGE,
        number=18,
        message=gca_encryption_spec.EncryptionSpec,
    )


class InputDataConfig(proto.Message):
    r

    fraction_split: "FractionSplit" = proto.Field(
        proto.MESSAGE,
        number=2,
        oneof="split",
        message="FractionSplit",
    )
    filter_split: "FilterSplit" = proto.Field(
        proto.MESSAGE,
        number=3,
        oneof="split",
        message="FilterSplit",
    )
    predefined_split: "PredefinedSplit" = proto.Field(
        proto.MESSAGE,
        number=4,
        oneof="split",
        message="PredefinedSplit",
    )
    timestamp_split: "TimestampSplit" = proto.Field(
        proto.MESSAGE,
        number=5,
        oneof="split",
        message="TimestampSplit",
    )
    stratified_split: "StratifiedSplit" = proto.Field(
        proto.MESSAGE,
        number=12,
        oneof="split",
        message="StratifiedSplit",
    )
    gcs_destination: io.GcsDestination = proto.Field(
        proto.MESSAGE,
        number=8,
        oneof="destination",
        message=io.GcsDestination,
    )
    bigquery_destination: io.BigQueryDestination = proto.Field(
        proto.MESSAGE,
        number=10,
        oneof="destination",
        message=io.BigQueryDestination,
    )
    dataset_id: str = proto.Field(
        proto.STRING,
        number=1,
    )
    annotations_filter: str = proto.Field(
        proto.STRING,
        number=6,
    )
    annotation_schema_uri: str = proto.Field(
        proto.STRING,
        number=9,
    )
    saved_query_id: str = proto.Field(
        proto.STRING,
        number=7,
    )
    persist_ml_use_assignment: bool = proto.Field(
        proto.BOOL,
        number=11,
    )


class FractionSplit(proto.Message):
    r

    training_fraction: float = proto.Field(
        proto.DOUBLE,
        number=1,
    )
    validation_fraction: float = proto.Field(
        proto.DOUBLE,
        number=2,
    )
    test_fraction: float = proto.Field(
        proto.DOUBLE,
        number=3,
    )


class FilterSplit(proto.Message):
    r

    training_filter: str = proto.Field(
        proto.STRING,
        number=1,
    )
    validation_filter: str = proto.Field(
        proto.STRING,
        number=2,
    )
    test_filter: str = proto.Field(
        proto.STRING,
        number=3,
    )


class PredefinedSplit(proto.Message):
    r

    key: str = proto.Field(
        proto.STRING,
        number=1,
    )


class TimestampSplit(proto.Message):
    r

    training_fraction: float = proto.Field(
        proto.DOUBLE,
        number=1,
    )
    validation_fraction: float = proto.Field(
        proto.DOUBLE,
        number=2,
    )
    test_fraction: float = proto.Field(
        proto.DOUBLE,
        number=3,
    )
    key: str = proto.Field(
        proto.STRING,
        number=4,
    )


class StratifiedSplit(proto.Message):
    r

    training_fraction: float = proto.Field(
        proto.DOUBLE,
        number=1,
    )
    validation_fraction: float = proto.Field(
        proto.DOUBLE,
        number=2,
    )
    test_fraction: float = proto.Field(
        proto.DOUBLE,
        number=3,
    )
    key: str = proto.Field(
        proto.STRING,
        number=4,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
