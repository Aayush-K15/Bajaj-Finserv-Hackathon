














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import operation
from google.cloud.aiplatform_v1beta1.types import (
    persistent_resource as gca_persistent_resource,
)
from google.protobuf import field_mask_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "CreatePersistentResourceRequest",
        "CreatePersistentResourceOperationMetadata",
        "UpdatePersistentResourceOperationMetadata",
        "RebootPersistentResourceOperationMetadata",
        "GetPersistentResourceRequest",
        "ListPersistentResourcesRequest",
        "ListPersistentResourcesResponse",
        "DeletePersistentResourceRequest",
        "UpdatePersistentResourceRequest",
        "RebootPersistentResourceRequest",
    },
)


class CreatePersistentResourceRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    persistent_resource: gca_persistent_resource.PersistentResource = proto.Field(
        proto.MESSAGE,
        number=2,
        message=gca_persistent_resource.PersistentResource,
    )
    persistent_resource_id: str = proto.Field(
        proto.STRING,
        number=3,
    )


class CreatePersistentResourceOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )
    progress_message: str = proto.Field(
        proto.STRING,
        number=2,
    )


class UpdatePersistentResourceOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )
    progress_message: str = proto.Field(
        proto.STRING,
        number=2,
    )


class RebootPersistentResourceOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )
    progress_message: str = proto.Field(
        proto.STRING,
        number=2,
    )


class GetPersistentResourceRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class ListPersistentResourcesRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=4,
    )


class ListPersistentResourcesResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    persistent_resources: MutableSequence[
        gca_persistent_resource.PersistentResource
    ] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_persistent_resource.PersistentResource,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class DeletePersistentResourceRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class UpdatePersistentResourceRequest(proto.Message):
    r

    persistent_resource: gca_persistent_resource.PersistentResource = proto.Field(
        proto.MESSAGE,
        number=1,
        message=gca_persistent_resource.PersistentResource,
    )
    update_mask: field_mask_pb2.FieldMask = proto.Field(
        proto.MESSAGE,
        number=2,
        message=field_mask_pb2.FieldMask,
    )


class RebootPersistentResourceRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
