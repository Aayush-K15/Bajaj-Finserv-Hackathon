














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import content as gca_content
from google.protobuf import struct_pb2  
from google.protobuf import timestamp_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "Session",
        "SessionEvent",
        "EventMetadata",
        "EventActions",
    },
)


class Session(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=3,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=4,
        message=timestamp_pb2.Timestamp,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=5,
    )
    session_state: struct_pb2.Struct = proto.Field(
        proto.MESSAGE,
        number=10,
        message=struct_pb2.Struct,
    )
    user_id: str = proto.Field(
        proto.STRING,
        number=12,
    )


class SessionEvent(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    author: str = proto.Field(
        proto.STRING,
        number=3,
    )
    content: gca_content.Content = proto.Field(
        proto.MESSAGE,
        number=4,
        message=gca_content.Content,
    )
    invocation_id: str = proto.Field(
        proto.STRING,
        number=5,
    )
    actions: "EventActions" = proto.Field(
        proto.MESSAGE,
        number=6,
        message="EventActions",
    )
    timestamp: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=8,
        message=timestamp_pb2.Timestamp,
    )
    error_code: str = proto.Field(
        proto.STRING,
        number=9,
    )
    error_message: str = proto.Field(
        proto.STRING,
        number=10,
    )
    event_metadata: "EventMetadata" = proto.Field(
        proto.MESSAGE,
        number=11,
        message="EventMetadata",
    )


class EventMetadata(proto.Message):
    r

    grounding_metadata: gca_content.GroundingMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=gca_content.GroundingMetadata,
    )
    partial: bool = proto.Field(
        proto.BOOL,
        number=2,
    )
    turn_complete: bool = proto.Field(
        proto.BOOL,
        number=3,
    )
    interrupted: bool = proto.Field(
        proto.BOOL,
        number=4,
    )
    long_running_tool_ids: MutableSequence[str] = proto.RepeatedField(
        proto.STRING,
        number=5,
    )
    branch: str = proto.Field(
        proto.STRING,
        number=6,
    )


class EventActions(proto.Message):
    r

    skip_summarization: bool = proto.Field(
        proto.BOOL,
        number=1,
    )
    state_delta: struct_pb2.Struct = proto.Field(
        proto.MESSAGE,
        number=2,
        message=struct_pb2.Struct,
    )
    artifact_delta: MutableMapping[str, int] = proto.MapField(
        proto.STRING,
        proto.INT32,
        number=3,
    )
    transfer_to_agent: bool = proto.Field(
        proto.BOOL,
        number=5,
    )
    escalate: bool = proto.Field(
        proto.BOOL,
        number=6,
    )
    requested_auth_configs: struct_pb2.Struct = proto.Field(
        proto.MESSAGE,
        number=7,
        message=struct_pb2.Struct,
    )
    transfer_agent: str = proto.Field(
        proto.STRING,
        number=8,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
