














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import tensorboard_time_series
from google.protobuf import timestamp_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "TimeSeriesData",
        "TimeSeriesDataPoint",
        "Scalar",
        "TensorboardTensor",
        "TensorboardBlobSequence",
        "TensorboardBlob",
    },
)


class TimeSeriesData(proto.Message):
    r

    tensorboard_time_series_id: str = proto.Field(
        proto.STRING,
        number=1,
    )
    value_type: tensorboard_time_series.TensorboardTimeSeries.ValueType = proto.Field(
        proto.ENUM,
        number=2,
        enum=tensorboard_time_series.TensorboardTimeSeries.ValueType,
    )
    values: MutableSequence["TimeSeriesDataPoint"] = proto.RepeatedField(
        proto.MESSAGE,
        number=3,
        message="TimeSeriesDataPoint",
    )


class TimeSeriesDataPoint(proto.Message):
    r

    scalar: "Scalar" = proto.Field(
        proto.MESSAGE,
        number=3,
        oneof="value",
        message="Scalar",
    )
    tensor: "TensorboardTensor" = proto.Field(
        proto.MESSAGE,
        number=4,
        oneof="value",
        message="TensorboardTensor",
    )
    blobs: "TensorboardBlobSequence" = proto.Field(
        proto.MESSAGE,
        number=5,
        oneof="value",
        message="TensorboardBlobSequence",
    )
    wall_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=1,
        message=timestamp_pb2.Timestamp,
    )
    step: int = proto.Field(
        proto.INT64,
        number=2,
    )


class Scalar(proto.Message):
    r

    value: float = proto.Field(
        proto.DOUBLE,
        number=1,
    )


class TensorboardTensor(proto.Message):
    r

    value: bytes = proto.Field(
        proto.BYTES,
        number=1,
    )
    version_number: int = proto.Field(
        proto.INT32,
        number=2,
    )


class TensorboardBlobSequence(proto.Message):
    r

    values: MutableSequence["TensorboardBlob"] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message="TensorboardBlob",
    )


class TensorboardBlob(proto.Message):
    r

    id: str = proto.Field(
        proto.STRING,
        number=1,
    )
    data: bytes = proto.Field(
        proto.BYTES,
        number=2,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
