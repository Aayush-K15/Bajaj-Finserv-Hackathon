














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import extension as gca_extension
from google.cloud.aiplatform_v1beta1.types import operation
from google.protobuf import field_mask_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "ImportExtensionRequest",
        "ImportExtensionOperationMetadata",
        "GetExtensionRequest",
        "UpdateExtensionRequest",
        "ListExtensionsRequest",
        "ListExtensionsResponse",
        "DeleteExtensionRequest",
    },
)


class ImportExtensionRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    extension: gca_extension.Extension = proto.Field(
        proto.MESSAGE,
        number=2,
        message=gca_extension.Extension,
    )


class ImportExtensionOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


class GetExtensionRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class UpdateExtensionRequest(proto.Message):
    r

    extension: gca_extension.Extension = proto.Field(
        proto.MESSAGE,
        number=1,
        message=gca_extension.Extension,
    )
    update_mask: field_mask_pb2.FieldMask = proto.Field(
        proto.MESSAGE,
        number=2,
        message=field_mask_pb2.FieldMask,
    )


class ListExtensionsRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=4,
    )
    order_by: str = proto.Field(
        proto.STRING,
        number=6,
    )


class ListExtensionsResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    extensions: MutableSequence[gca_extension.Extension] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_extension.Extension,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class DeleteExtensionRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
