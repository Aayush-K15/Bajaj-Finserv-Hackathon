














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.protobuf import struct_pb2  
from google.protobuf import timestamp_pb2  
from google.type import interval_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "FeatureMonitor",
        "ScheduleConfig",
        "FeatureSelectionConfig",
        "FeatureStatsAndAnomaly",
        "FeatureStatsAndAnomalySpec",
    },
)


class FeatureMonitor(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=2,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=3,
        message=timestamp_pb2.Timestamp,
    )
    etag: str = proto.Field(
        proto.STRING,
        number=4,
    )
    labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=5,
    )
    description: str = proto.Field(
        proto.STRING,
        number=6,
    )
    schedule_config: "ScheduleConfig" = proto.Field(
        proto.MESSAGE,
        number=7,
        message="ScheduleConfig",
    )
    feature_selection_config: "FeatureSelectionConfig" = proto.Field(
        proto.MESSAGE,
        number=8,
        message="FeatureSelectionConfig",
    )


class ScheduleConfig(proto.Message):
    r

    cron: str = proto.Field(
        proto.STRING,
        number=1,
    )


class FeatureSelectionConfig(proto.Message):
    r

    class FeatureConfig(proto.Message):
        r

        feature_id: str = proto.Field(
            proto.STRING,
            number=1,
        )
        drift_threshold: float = proto.Field(
            proto.DOUBLE,
            number=2,
        )

    feature_configs: MutableSequence[FeatureConfig] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=FeatureConfig,
    )


class FeatureStatsAndAnomaly(proto.Message):
    r

    feature_id: str = proto.Field(
        proto.STRING,
        number=1,
    )
    feature_stats: struct_pb2.Value = proto.Field(
        proto.MESSAGE,
        number=2,
        message=struct_pb2.Value,
    )
    distribution_deviation: float = proto.Field(
        proto.DOUBLE,
        number=3,
    )
    drift_detection_threshold: float = proto.Field(
        proto.DOUBLE,
        number=4,
    )
    drift_detected: bool = proto.Field(
        proto.BOOL,
        number=5,
    )
    stats_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=6,
        message=timestamp_pb2.Timestamp,
    )
    feature_monitor_job_id: int = proto.Field(
        proto.INT64,
        number=7,
    )
    feature_monitor_id: str = proto.Field(
        proto.STRING,
        number=8,
    )


class FeatureStatsAndAnomalySpec(proto.Message):
    r

    latest_stats_count: int = proto.Field(
        proto.INT32,
        number=1,
        optional=True,
    )
    stats_time_range: interval_pb2.Interval = proto.Field(
        proto.MESSAGE,
        number=2,
        message=interval_pb2.Interval,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
