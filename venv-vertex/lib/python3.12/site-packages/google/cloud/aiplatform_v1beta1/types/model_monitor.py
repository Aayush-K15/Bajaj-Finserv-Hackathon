














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import encryption_spec as gca_encryption_spec
from google.cloud.aiplatform_v1beta1.types import explanation
from google.cloud.aiplatform_v1beta1.types import model_monitoring_spec
from google.protobuf import timestamp_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "ModelMonitor",
        "ModelMonitoringSchema",
    },
)


class ModelMonitor(proto.Message):
    r

    class ModelMonitoringTarget(proto.Message):
        r

        class VertexModelSource(proto.Message):
            r

            model: str = proto.Field(
                proto.STRING,
                number=1,
            )
            model_version_id: str = proto.Field(
                proto.STRING,
                number=2,
            )

        vertex_model: "ModelMonitor.ModelMonitoringTarget.VertexModelSource" = (
            proto.Field(
                proto.MESSAGE,
                number=1,
                oneof="source",
                message="ModelMonitor.ModelMonitoringTarget.VertexModelSource",
            )
        )

    tabular_objective: model_monitoring_spec.ModelMonitoringObjectiveSpec.TabularObjective = proto.Field(
        proto.MESSAGE,
        number=11,
        oneof="default_objective",
        message=model_monitoring_spec.ModelMonitoringObjectiveSpec.TabularObjective,
    )
    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=2,
    )
    model_monitoring_target: ModelMonitoringTarget = proto.Field(
        proto.MESSAGE,
        number=3,
        message=ModelMonitoringTarget,
    )
    training_dataset: model_monitoring_spec.ModelMonitoringInput = proto.Field(
        proto.MESSAGE,
        number=10,
        message=model_monitoring_spec.ModelMonitoringInput,
    )
    notification_spec: model_monitoring_spec.ModelMonitoringNotificationSpec = (
        proto.Field(
            proto.MESSAGE,
            number=12,
            message=model_monitoring_spec.ModelMonitoringNotificationSpec,
        )
    )
    output_spec: model_monitoring_spec.ModelMonitoringOutputSpec = proto.Field(
        proto.MESSAGE,
        number=13,
        message=model_monitoring_spec.ModelMonitoringOutputSpec,
    )
    explanation_spec: explanation.ExplanationSpec = proto.Field(
        proto.MESSAGE,
        number=16,
        message=explanation.ExplanationSpec,
    )
    model_monitoring_schema: "ModelMonitoringSchema" = proto.Field(
        proto.MESSAGE,
        number=9,
        message="ModelMonitoringSchema",
    )
    encryption_spec: gca_encryption_spec.EncryptionSpec = proto.Field(
        proto.MESSAGE,
        number=5,
        message=gca_encryption_spec.EncryptionSpec,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=6,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=7,
        message=timestamp_pb2.Timestamp,
    )
    satisfies_pzs: bool = proto.Field(
        proto.BOOL,
        number=17,
    )
    satisfies_pzi: bool = proto.Field(
        proto.BOOL,
        number=18,
    )


class ModelMonitoringSchema(proto.Message):
    r

    class FieldSchema(proto.Message):
        r

        name: str = proto.Field(
            proto.STRING,
            number=1,
        )
        data_type: str = proto.Field(
            proto.STRING,
            number=2,
        )
        repeated: bool = proto.Field(
            proto.BOOL,
            number=3,
        )

    feature_fields: MutableSequence[FieldSchema] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=FieldSchema,
    )
    prediction_fields: MutableSequence[FieldSchema] = proto.RepeatedField(
        proto.MESSAGE,
        number=2,
        message=FieldSchema,
    )
    ground_truth_fields: MutableSequence[FieldSchema] = proto.RepeatedField(
        proto.MESSAGE,
        number=3,
        message=FieldSchema,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
