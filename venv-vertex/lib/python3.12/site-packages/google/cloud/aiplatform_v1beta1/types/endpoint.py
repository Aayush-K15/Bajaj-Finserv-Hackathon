














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import encryption_spec as gca_encryption_spec
from google.cloud.aiplatform_v1beta1.types import explanation
from google.cloud.aiplatform_v1beta1.types import io
from google.cloud.aiplatform_v1beta1.types import machine_resources
from google.cloud.aiplatform_v1beta1.types import service_networking
from google.protobuf import duration_pb2  
from google.protobuf import timestamp_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "Endpoint",
        "DeployedModel",
        "PrivateEndpoints",
        "PredictRequestResponseLoggingConfig",
        "PublisherModelConfig",
        "ClientConnectionConfig",
        "FasterDeploymentConfig",
        "RolloutOptions",
        "GenAiAdvancedFeaturesConfig",
        "SpeculativeDecodingSpec",
    },
)


class Endpoint(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=2,
    )
    description: str = proto.Field(
        proto.STRING,
        number=3,
    )
    deployed_models: MutableSequence["DeployedModel"] = proto.RepeatedField(
        proto.MESSAGE,
        number=4,
        message="DeployedModel",
    )
    traffic_split: MutableMapping[str, int] = proto.MapField(
        proto.STRING,
        proto.INT32,
        number=5,
    )
    etag: str = proto.Field(
        proto.STRING,
        number=6,
    )
    labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=7,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=8,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=9,
        message=timestamp_pb2.Timestamp,
    )
    encryption_spec: gca_encryption_spec.EncryptionSpec = proto.Field(
        proto.MESSAGE,
        number=10,
        message=gca_encryption_spec.EncryptionSpec,
    )
    network: str = proto.Field(
        proto.STRING,
        number=13,
    )
    enable_private_service_connect: bool = proto.Field(
        proto.BOOL,
        number=17,
    )
    private_service_connect_config: service_networking.PrivateServiceConnectConfig = (
        proto.Field(
            proto.MESSAGE,
            number=21,
            message=service_networking.PrivateServiceConnectConfig,
        )
    )
    model_deployment_monitoring_job: str = proto.Field(
        proto.STRING,
        number=14,
    )
    predict_request_response_logging_config: "PredictRequestResponseLoggingConfig" = (
        proto.Field(
            proto.MESSAGE,
            number=18,
            message="PredictRequestResponseLoggingConfig",
        )
    )
    dedicated_endpoint_enabled: bool = proto.Field(
        proto.BOOL,
        number=24,
    )
    dedicated_endpoint_dns: str = proto.Field(
        proto.STRING,
        number=25,
    )
    client_connection_config: "ClientConnectionConfig" = proto.Field(
        proto.MESSAGE,
        number=23,
        message="ClientConnectionConfig",
    )
    satisfies_pzs: bool = proto.Field(
        proto.BOOL,
        number=27,
    )
    satisfies_pzi: bool = proto.Field(
        proto.BOOL,
        number=28,
    )
    gen_ai_advanced_features_config: "GenAiAdvancedFeaturesConfig" = proto.Field(
        proto.MESSAGE,
        number=29,
        message="GenAiAdvancedFeaturesConfig",
    )


class DeployedModel(proto.Message):
    r

    class Status(proto.Message):
        r

        message: str = proto.Field(
            proto.STRING,
            number=1,
        )
        last_update_time: timestamp_pb2.Timestamp = proto.Field(
            proto.MESSAGE,
            number=2,
            message=timestamp_pb2.Timestamp,
        )
        available_replica_count: int = proto.Field(
            proto.INT32,
            number=3,
        )

    dedicated_resources: machine_resources.DedicatedResources = proto.Field(
        proto.MESSAGE,
        number=7,
        oneof="prediction_resources",
        message=machine_resources.DedicatedResources,
    )
    automatic_resources: machine_resources.AutomaticResources = proto.Field(
        proto.MESSAGE,
        number=8,
        oneof="prediction_resources",
        message=machine_resources.AutomaticResources,
    )
    shared_resources: str = proto.Field(
        proto.STRING,
        number=17,
        oneof="prediction_resources",
    )
    id: str = proto.Field(
        proto.STRING,
        number=1,
    )
    model: str = proto.Field(
        proto.STRING,
        number=2,
    )
    model_version_id: str = proto.Field(
        proto.STRING,
        number=18,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=3,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=6,
        message=timestamp_pb2.Timestamp,
    )
    explanation_spec: explanation.ExplanationSpec = proto.Field(
        proto.MESSAGE,
        number=9,
        message=explanation.ExplanationSpec,
    )
    disable_explanations: bool = proto.Field(
        proto.BOOL,
        number=19,
    )
    service_account: str = proto.Field(
        proto.STRING,
        number=11,
    )
    enable_container_logging: bool = proto.Field(
        proto.BOOL,
        number=12,
    )
    enable_access_logging: bool = proto.Field(
        proto.BOOL,
        number=13,
    )
    private_endpoints: "PrivateEndpoints" = proto.Field(
        proto.MESSAGE,
        number=14,
        message="PrivateEndpoints",
    )
    faster_deployment_config: "FasterDeploymentConfig" = proto.Field(
        proto.MESSAGE,
        number=23,
        message="FasterDeploymentConfig",
    )
    rollout_options: "RolloutOptions" = proto.Field(
        proto.MESSAGE,
        number=25,
        message="RolloutOptions",
    )
    status: Status = proto.Field(
        proto.MESSAGE,
        number=26,
        message=Status,
    )
    system_labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=28,
    )
    checkpoint_id: str = proto.Field(
        proto.STRING,
        number=29,
    )
    speculative_decoding_spec: "SpeculativeDecodingSpec" = proto.Field(
        proto.MESSAGE,
        number=30,
        message="SpeculativeDecodingSpec",
    )


class PrivateEndpoints(proto.Message):
    r

    predict_http_uri: str = proto.Field(
        proto.STRING,
        number=1,
    )
    explain_http_uri: str = proto.Field(
        proto.STRING,
        number=2,
    )
    health_http_uri: str = proto.Field(
        proto.STRING,
        number=3,
    )
    service_attachment: str = proto.Field(
        proto.STRING,
        number=4,
    )


class PredictRequestResponseLoggingConfig(proto.Message):
    r

    enabled: bool = proto.Field(
        proto.BOOL,
        number=1,
    )
    sampling_rate: float = proto.Field(
        proto.DOUBLE,
        number=2,
    )
    bigquery_destination: io.BigQueryDestination = proto.Field(
        proto.MESSAGE,
        number=3,
        message=io.BigQueryDestination,
    )
    request_response_logging_schema_version: str = proto.Field(
        proto.STRING,
        number=4,
    )
    enable_otel_logging: bool = proto.Field(
        proto.BOOL,
        number=6,
    )


class PublisherModelConfig(proto.Message):
    r

    logging_config: "PredictRequestResponseLoggingConfig" = proto.Field(
        proto.MESSAGE,
        number=3,
        message="PredictRequestResponseLoggingConfig",
    )


class ClientConnectionConfig(proto.Message):
    r

    inference_timeout: duration_pb2.Duration = proto.Field(
        proto.MESSAGE,
        number=1,
        message=duration_pb2.Duration,
    )


class FasterDeploymentConfig(proto.Message):
    r

    fast_tryout_enabled: bool = proto.Field(
        proto.BOOL,
        number=2,
    )


class RolloutOptions(proto.Message):
    r

    max_unavailable_replicas: int = proto.Field(
        proto.INT32,
        number=3,
        oneof="max_unavailable",
    )
    max_unavailable_percentage: int = proto.Field(
        proto.INT32,
        number=4,
        oneof="max_unavailable",
    )
    max_surge_replicas: int = proto.Field(
        proto.INT32,
        number=5,
        oneof="max_surge",
    )
    max_surge_percentage: int = proto.Field(
        proto.INT32,
        number=6,
        oneof="max_surge",
    )
    previous_deployed_model: str = proto.Field(
        proto.STRING,
        number=1,
    )
    revision_number: int = proto.Field(
        proto.INT32,
        number=2,
    )


class GenAiAdvancedFeaturesConfig(proto.Message):
    r

    class RagConfig(proto.Message):
        r

        enable_rag: bool = proto.Field(
            proto.BOOL,
            number=1,
        )

    rag_config: RagConfig = proto.Field(
        proto.MESSAGE,
        number=1,
        message=RagConfig,
    )


class SpeculativeDecodingSpec(proto.Message):
    r

    class DraftModelSpeculation(proto.Message):
        r

        draft_model: str = proto.Field(
            proto.STRING,
            number=1,
        )

    class NgramSpeculation(proto.Message):
        r

        ngram_size: int = proto.Field(
            proto.INT32,
            number=1,
        )

    draft_model_speculation: DraftModelSpeculation = proto.Field(
        proto.MESSAGE,
        number=2,
        oneof="speculation",
        message=DraftModelSpeculation,
    )
    ngram_speculation: NgramSpeculation = proto.Field(
        proto.MESSAGE,
        number=3,
        oneof="speculation",
        message=NgramSpeculation,
    )
    speculative_token_count: int = proto.Field(
        proto.INT32,
        number=1,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
