














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import (
    feature_online_store as gca_feature_online_store,
)
from google.cloud.aiplatform_v1beta1.types import feature_view as gca_feature_view
from google.cloud.aiplatform_v1beta1.types import (
    feature_view_sync as gca_feature_view_sync,
)
from google.cloud.aiplatform_v1beta1.types import operation
from google.protobuf import field_mask_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "CreateFeatureOnlineStoreRequest",
        "GetFeatureOnlineStoreRequest",
        "ListFeatureOnlineStoresRequest",
        "ListFeatureOnlineStoresResponse",
        "UpdateFeatureOnlineStoreRequest",
        "DeleteFeatureOnlineStoreRequest",
        "CreateFeatureViewRequest",
        "GetFeatureViewRequest",
        "ListFeatureViewsRequest",
        "ListFeatureViewsResponse",
        "UpdateFeatureViewRequest",
        "DeleteFeatureViewRequest",
        "CreateFeatureOnlineStoreOperationMetadata",
        "UpdateFeatureOnlineStoreOperationMetadata",
        "CreateFeatureViewOperationMetadata",
        "UpdateFeatureViewOperationMetadata",
        "SyncFeatureViewRequest",
        "SyncFeatureViewResponse",
        "GetFeatureViewSyncRequest",
        "ListFeatureViewSyncsRequest",
        "ListFeatureViewSyncsResponse",
    },
)


class CreateFeatureOnlineStoreRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    feature_online_store: gca_feature_online_store.FeatureOnlineStore = proto.Field(
        proto.MESSAGE,
        number=2,
        message=gca_feature_online_store.FeatureOnlineStore,
    )
    feature_online_store_id: str = proto.Field(
        proto.STRING,
        number=3,
    )


class GetFeatureOnlineStoreRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class ListFeatureOnlineStoresRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=4,
    )
    order_by: str = proto.Field(
        proto.STRING,
        number=5,
    )


class ListFeatureOnlineStoresResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    feature_online_stores: MutableSequence[
        gca_feature_online_store.FeatureOnlineStore
    ] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_feature_online_store.FeatureOnlineStore,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class UpdateFeatureOnlineStoreRequest(proto.Message):
    r

    feature_online_store: gca_feature_online_store.FeatureOnlineStore = proto.Field(
        proto.MESSAGE,
        number=1,
        message=gca_feature_online_store.FeatureOnlineStore,
    )
    update_mask: field_mask_pb2.FieldMask = proto.Field(
        proto.MESSAGE,
        number=2,
        message=field_mask_pb2.FieldMask,
    )


class DeleteFeatureOnlineStoreRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    force: bool = proto.Field(
        proto.BOOL,
        number=2,
    )


class CreateFeatureViewRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    feature_view: gca_feature_view.FeatureView = proto.Field(
        proto.MESSAGE,
        number=2,
        message=gca_feature_view.FeatureView,
    )
    feature_view_id: str = proto.Field(
        proto.STRING,
        number=3,
    )
    run_sync_immediately: bool = proto.Field(
        proto.BOOL,
        number=4,
    )


class GetFeatureViewRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class ListFeatureViewsRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=4,
    )
    order_by: str = proto.Field(
        proto.STRING,
        number=5,
    )


class ListFeatureViewsResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    feature_views: MutableSequence[gca_feature_view.FeatureView] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_feature_view.FeatureView,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class UpdateFeatureViewRequest(proto.Message):
    r

    feature_view: gca_feature_view.FeatureView = proto.Field(
        proto.MESSAGE,
        number=1,
        message=gca_feature_view.FeatureView,
    )
    update_mask: field_mask_pb2.FieldMask = proto.Field(
        proto.MESSAGE,
        number=2,
        message=field_mask_pb2.FieldMask,
    )


class DeleteFeatureViewRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class CreateFeatureOnlineStoreOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


class UpdateFeatureOnlineStoreOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


class CreateFeatureViewOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


class UpdateFeatureViewOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


class SyncFeatureViewRequest(proto.Message):
    r

    feature_view: str = proto.Field(
        proto.STRING,
        number=1,
    )


class SyncFeatureViewResponse(proto.Message):
    r

    feature_view_sync: str = proto.Field(
        proto.STRING,
        number=1,
    )


class GetFeatureViewSyncRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class ListFeatureViewSyncsRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=4,
    )
    order_by: str = proto.Field(
        proto.STRING,
        number=5,
    )


class ListFeatureViewSyncsResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    feature_view_syncs: MutableSequence[
        gca_feature_view_sync.FeatureViewSync
    ] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_feature_view_sync.FeatureViewSync,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
