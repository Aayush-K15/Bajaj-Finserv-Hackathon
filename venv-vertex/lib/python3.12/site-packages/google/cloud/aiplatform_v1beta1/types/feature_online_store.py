














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import encryption_spec as gca_encryption_spec
from google.cloud.aiplatform_v1beta1.types import service_networking
from google.protobuf import timestamp_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "FeatureOnlineStore",
    },
)


class FeatureOnlineStore(proto.Message):
    r

    class State(proto.Enum):
        r
        STATE_UNSPECIFIED = 0
        STABLE = 1
        UPDATING = 2

    class Bigtable(proto.Message):
        r

        class AutoScaling(proto.Message):
            r

            min_node_count: int = proto.Field(
                proto.INT32,
                number=1,
            )
            max_node_count: int = proto.Field(
                proto.INT32,
                number=2,
            )
            cpu_utilization_target: int = proto.Field(
                proto.INT32,
                number=3,
            )

        auto_scaling: "FeatureOnlineStore.Bigtable.AutoScaling" = proto.Field(
            proto.MESSAGE,
            number=1,
            message="FeatureOnlineStore.Bigtable.AutoScaling",
        )

    class Optimized(proto.Message):
        r

    class DedicatedServingEndpoint(proto.Message):
        r

        public_endpoint_domain_name: str = proto.Field(
            proto.STRING,
            number=2,
        )
        private_service_connect_config: service_networking.PrivateServiceConnectConfig = proto.Field(
            proto.MESSAGE,
            number=3,
            message=service_networking.PrivateServiceConnectConfig,
        )
        service_attachment: str = proto.Field(
            proto.STRING,
            number=4,
        )

    class EmbeddingManagement(proto.Message):
        r

        enabled: bool = proto.Field(
            proto.BOOL,
            number=1,
        )

    bigtable: Bigtable = proto.Field(
        proto.MESSAGE,
        number=8,
        oneof="storage_type",
        message=Bigtable,
    )
    optimized: Optimized = proto.Field(
        proto.MESSAGE,
        number=12,
        oneof="storage_type",
        message=Optimized,
    )
    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=3,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=4,
        message=timestamp_pb2.Timestamp,
    )
    etag: str = proto.Field(
        proto.STRING,
        number=5,
    )
    labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=6,
    )
    state: State = proto.Field(
        proto.ENUM,
        number=7,
        enum=State,
    )
    dedicated_serving_endpoint: DedicatedServingEndpoint = proto.Field(
        proto.MESSAGE,
        number=10,
        message=DedicatedServingEndpoint,
    )
    embedding_management: EmbeddingManagement = proto.Field(
        proto.MESSAGE,
        number=11,
        message=EmbeddingManagement,
    )
    encryption_spec: gca_encryption_spec.EncryptionSpec = proto.Field(
        proto.MESSAGE,
        number=13,
        message=gca_encryption_spec.EncryptionSpec,
    )
    satisfies_pzs: bool = proto.Field(
        proto.BOOL,
        number=15,
    )
    satisfies_pzi: bool = proto.Field(
        proto.BOOL,
        number=16,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
