














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import job_state
from google.cloud.aiplatform_v1beta1.types import (
    model_monitoring_spec as gca_model_monitoring_spec,
)
from google.protobuf import timestamp_pb2  
from google.rpc import status_pb2  
from google.type import interval_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "ModelMonitoringJob",
        "ModelMonitoringJobExecutionDetail",
    },
)


class ModelMonitoringJob(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=2,
    )
    model_monitoring_spec: gca_model_monitoring_spec.ModelMonitoringSpec = proto.Field(
        proto.MESSAGE,
        number=3,
        message=gca_model_monitoring_spec.ModelMonitoringSpec,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=4,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=5,
        message=timestamp_pb2.Timestamp,
    )
    state: job_state.JobState = proto.Field(
        proto.ENUM,
        number=6,
        enum=job_state.JobState,
    )
    schedule: str = proto.Field(
        proto.STRING,
        number=7,
    )
    job_execution_detail: "ModelMonitoringJobExecutionDetail" = proto.Field(
        proto.MESSAGE,
        number=8,
        message="ModelMonitoringJobExecutionDetail",
    )
    schedule_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=9,
        message=timestamp_pb2.Timestamp,
    )


class ModelMonitoringJobExecutionDetail(proto.Message):
    r

    class ProcessedDataset(proto.Message):
        r

        location: str = proto.Field(
            proto.STRING,
            number=1,
        )
        time_range: interval_pb2.Interval = proto.Field(
            proto.MESSAGE,
            number=2,
            message=interval_pb2.Interval,
        )

    baseline_datasets: MutableSequence[ProcessedDataset] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=ProcessedDataset,
    )
    target_datasets: MutableSequence[ProcessedDataset] = proto.RepeatedField(
        proto.MESSAGE,
        number=2,
        message=ProcessedDataset,
    )
    objective_status: MutableMapping[str, status_pb2.Status] = proto.MapField(
        proto.STRING,
        proto.MESSAGE,
        number=3,
        message=status_pb2.Status,
    )
    error: status_pb2.Status = proto.Field(
        proto.MESSAGE,
        number=4,
        message=status_pb2.Status,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
