














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import example as gca_example
from google.cloud.aiplatform_v1beta1.types import example_store as gca_example_store
from google.cloud.aiplatform_v1beta1.types import operation
from google.protobuf import field_mask_pb2  
from google.protobuf import timestamp_pb2  
from google.rpc import status_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "CreateExampleStoreRequest",
        "CreateExampleStoreOperationMetadata",
        "GetExampleStoreRequest",
        "UpdateExampleStoreRequest",
        "UpdateExampleStoreOperationMetadata",
        "DeleteExampleStoreRequest",
        "DeleteExampleStoreOperationMetadata",
        "ListExampleStoresRequest",
        "ListExampleStoresResponse",
        "Example",
        "UpsertExamplesRequest",
        "UpsertExamplesResponse",
        "RemoveExamplesRequest",
        "RemoveExamplesResponse",
        "SearchExamplesRequest",
        "SearchExamplesResponse",
        "FetchExamplesRequest",
        "FetchExamplesResponse",
    },
)


class CreateExampleStoreRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    example_store: gca_example_store.ExampleStore = proto.Field(
        proto.MESSAGE,
        number=2,
        message=gca_example_store.ExampleStore,
    )


class CreateExampleStoreOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


class GetExampleStoreRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class UpdateExampleStoreRequest(proto.Message):
    r

    example_store: gca_example_store.ExampleStore = proto.Field(
        proto.MESSAGE,
        number=1,
        message=gca_example_store.ExampleStore,
    )
    update_mask: field_mask_pb2.FieldMask = proto.Field(
        proto.MESSAGE,
        number=2,
        message=field_mask_pb2.FieldMask,
    )


class UpdateExampleStoreOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


class DeleteExampleStoreRequest(proto.Message):
    r

    name: str = proto.Field(
        proto.STRING,
        number=1,
    )


class DeleteExampleStoreOperationMetadata(proto.Message):
    r

    generic_metadata: operation.GenericOperationMetadata = proto.Field(
        proto.MESSAGE,
        number=1,
        message=operation.GenericOperationMetadata,
    )


class ListExampleStoresRequest(proto.Message):
    r

    parent: str = proto.Field(
        proto.STRING,
        number=1,
    )
    filter: str = proto.Field(
        proto.STRING,
        number=2,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=3,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=4,
    )


class ListExampleStoresResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    example_stores: MutableSequence[
        gca_example_store.ExampleStore
    ] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=gca_example_store.ExampleStore,
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


class Example(proto.Message):
    r

    stored_contents_example: gca_example.StoredContentsExample = proto.Field(
        proto.MESSAGE,
        number=6,
        oneof="example_type",
        message=gca_example.StoredContentsExample,
    )
    display_name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    example_id: str = proto.Field(
        proto.STRING,
        number=4,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=7,
        message=timestamp_pb2.Timestamp,
    )


class UpsertExamplesRequest(proto.Message):
    r

    example_store: str = proto.Field(
        proto.STRING,
        number=1,
    )
    examples: MutableSequence["Example"] = proto.RepeatedField(
        proto.MESSAGE,
        number=2,
        message="Example",
    )
    overwrite: bool = proto.Field(
        proto.BOOL,
        number=4,
    )


class UpsertExamplesResponse(proto.Message):
    r

    class UpsertResult(proto.Message):
        r

        example: "Example" = proto.Field(
            proto.MESSAGE,
            number=1,
            oneof="result",
            message="Example",
        )
        status: status_pb2.Status = proto.Field(
            proto.MESSAGE,
            number=2,
            oneof="result",
            message=status_pb2.Status,
        )

    results: MutableSequence[UpsertResult] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=UpsertResult,
    )


class RemoveExamplesRequest(proto.Message):
    r

    stored_contents_example_filter: gca_example_store.StoredContentsExampleFilter = (
        proto.Field(
            proto.MESSAGE,
            number=8,
            oneof="metadata_filter",
            message=gca_example_store.StoredContentsExampleFilter,
        )
    )
    example_store: str = proto.Field(
        proto.STRING,
        number=1,
    )
    example_ids: MutableSequence[str] = proto.RepeatedField(
        proto.STRING,
        number=6,
    )


class RemoveExamplesResponse(proto.Message):
    r

    example_ids: MutableSequence[str] = proto.RepeatedField(
        proto.STRING,
        number=1,
    )


class SearchExamplesRequest(proto.Message):
    r

    stored_contents_example_parameters: gca_example_store.StoredContentsExampleParameters = proto.Field(
        proto.MESSAGE,
        number=6,
        oneof="parameters",
        message=gca_example_store.StoredContentsExampleParameters,
    )
    example_store: str = proto.Field(
        proto.STRING,
        number=1,
    )
    top_k: int = proto.Field(
        proto.INT64,
        number=2,
    )


class SearchExamplesResponse(proto.Message):
    r

    class SimilarExample(proto.Message):
        r

        example: "Example" = proto.Field(
            proto.MESSAGE,
            number=1,
            message="Example",
        )
        similarity_score: float = proto.Field(
            proto.FLOAT,
            number=2,
        )

    results: MutableSequence[SimilarExample] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message=SimilarExample,
    )


class FetchExamplesRequest(proto.Message):
    r

    stored_contents_example_filter: gca_example_store.StoredContentsExampleFilter = (
        proto.Field(
            proto.MESSAGE,
            number=8,
            oneof="metadata_filter",
            message=gca_example_store.StoredContentsExampleFilter,
        )
    )
    example_store: str = proto.Field(
        proto.STRING,
        number=1,
    )
    page_size: int = proto.Field(
        proto.INT32,
        number=2,
    )
    page_token: str = proto.Field(
        proto.STRING,
        number=3,
    )
    example_ids: MutableSequence[str] = proto.RepeatedField(
        proto.STRING,
        number=6,
    )


class FetchExamplesResponse(proto.Message):
    r

    @property
    def raw_page(self):
        return self

    examples: MutableSequence["Example"] = proto.RepeatedField(
        proto.MESSAGE,
        number=1,
        message="Example",
    )
    next_page_token: str = proto.Field(
        proto.STRING,
        number=2,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
