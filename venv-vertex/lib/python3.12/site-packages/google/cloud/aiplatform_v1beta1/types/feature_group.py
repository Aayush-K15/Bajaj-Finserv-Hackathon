














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  

from google.cloud.aiplatform_v1beta1.types import io
from google.protobuf import timestamp_pb2  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1",
    manifest={
        "FeatureGroup",
    },
)


class FeatureGroup(proto.Message):
    r

    class ServiceAgentType(proto.Enum):
        r
        SERVICE_AGENT_TYPE_UNSPECIFIED = 0
        SERVICE_AGENT_TYPE_PROJECT = 1
        SERVICE_AGENT_TYPE_FEATURE_GROUP = 2

    class BigQuery(proto.Message):
        r

        class TimeSeries(proto.Message):
            r

            timestamp_column: str = proto.Field(
                proto.STRING,
                number=1,
            )

        big_query_source: io.BigQuerySource = proto.Field(
            proto.MESSAGE,
            number=1,
            message=io.BigQuerySource,
        )
        entity_id_columns: MutableSequence[str] = proto.RepeatedField(
            proto.STRING,
            number=2,
        )
        static_data_source: bool = proto.Field(
            proto.BOOL,
            number=3,
        )
        time_series: "FeatureGroup.BigQuery.TimeSeries" = proto.Field(
            proto.MESSAGE,
            number=4,
            message="FeatureGroup.BigQuery.TimeSeries",
        )
        dense: bool = proto.Field(
            proto.BOOL,
            number=5,
        )

    big_query: BigQuery = proto.Field(
        proto.MESSAGE,
        number=7,
        oneof="source",
        message=BigQuery,
    )
    name: str = proto.Field(
        proto.STRING,
        number=1,
    )
    create_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=2,
        message=timestamp_pb2.Timestamp,
    )
    update_time: timestamp_pb2.Timestamp = proto.Field(
        proto.MESSAGE,
        number=3,
        message=timestamp_pb2.Timestamp,
    )
    etag: str = proto.Field(
        proto.STRING,
        number=4,
    )
    labels: MutableMapping[str, str] = proto.MapField(
        proto.STRING,
        proto.STRING,
        number=5,
    )
    description: str = proto.Field(
        proto.STRING,
        number=6,
    )
    service_agent_type: ServiceAgentType = proto.Field(
        proto.ENUM,
        number=8,
        enum=ServiceAgentType,
    )
    service_account_email: str = proto.Field(
        proto.STRING,
        number=9,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
