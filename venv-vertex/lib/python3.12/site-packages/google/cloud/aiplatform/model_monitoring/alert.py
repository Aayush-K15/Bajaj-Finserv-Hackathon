
















from typing import List, Optional
from google.cloud.aiplatform_v1.types import (
    model_monitoring as gca_model_monitoring_v1,
)



from google.cloud.aiplatform_v1beta1.types import (
    model_monitoring as gca_model_monitoring_v1beta1,
)

gca_model_monitoring = gca_model_monitoring_v1


class AlertConfig:
    def __init__(
        self,
        user_emails: List[str] = [],
        enable_logging: Optional[bool] = False,
        notification_channels: List[str] = [],
    ):
        
        self.user_emails = user_emails
        self.enable_logging = enable_logging
        self.notification_channels = notification_channels
        self._config_for_bp = False

    def as_proto(self) -> gca_model_monitoring.ModelMonitoringAlertConfig:
        
        
        
        if self._config_for_bp:
            gca_model_monitoring = gca_model_monitoring_v1beta1
        else:
            gca_model_monitoring = gca_model_monitoring_v1

        return gca_model_monitoring.ModelMonitoringAlertConfig(
            email_alert_config=gca_model_monitoring.ModelMonitoringAlertConfig.EmailAlertConfig(
                user_emails=self.user_emails
            ),
            enable_logging=self.enable_logging,
            notification_channels=self.notification_channels,
        )


class EmailAlertConfig(AlertConfig):
    def __init__(
        self, user_emails: List[str] = [], enable_logging: Optional[bool] = False
    ):
        
        super().__init__(user_emails=user_emails, enable_logging=enable_logging)
