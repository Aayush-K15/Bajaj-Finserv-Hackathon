


















from ray.dashboard.modules import dashboard_sdk as oss_dashboard_sdk

from .util import _gapic_utils
from .util import _validation_utils


def get_job_submission_client_cluster_info(
    address: str, *args, **kwargs
) -> oss_dashboard_sdk.ClusterInfo:
    
    if _validation_utils.valid_dashboard_address(address):
        dashboard_address = address
    else:
        address = _validation_utils.maybe_reconstruct_resource_name(address)
        _validation_utils.valid_resource_name(address)

        resource_name = address
        response = _gapic_utils.get_persistent_resource(resource_name)

        dashboard_address = response.resource_runtime.access_uris.get(
            "RAY_DASHBOARD_URI", None
        )

        if dashboard_address is None:
            raise RuntimeError(
                "[Ray on Vertex AI]: Unable to obtain a response from the backend."
            )
    
    bearer_token = _validation_utils.get_bearer_token()
    if kwargs.get("headers", None) is None:
        kwargs["headers"] = {
            "Content-Type": "application/json",
            "Authorization": "Bearer {}".format(bearer_token),
        }
    return oss_dashboard_sdk.get_job_submission_client_cluster_info(
        address=dashboard_address,
        _use_tls=True,
        *args,
        **kwargs,
    )
