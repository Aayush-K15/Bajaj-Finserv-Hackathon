














from __future__ import annotations

from typing import MutableMapping, MutableSequence

import proto  


__protobuf__ = proto.module(
    package="google.cloud.aiplatform.v1beta1.schema.trainingjob.definition",
    manifest={
        "AutoMlImageSegmentation",
        "AutoMlImageSegmentationInputs",
        "AutoMlImageSegmentationMetadata",
    },
)


class AutoMlImageSegmentation(proto.Message):
    r

    inputs: "AutoMlImageSegmentationInputs" = proto.Field(
        proto.MESSAGE,
        number=1,
        message="AutoMlImageSegmentationInputs",
    )
    metadata: "AutoMlImageSegmentationMetadata" = proto.Field(
        proto.MESSAGE,
        number=2,
        message="AutoMlImageSegmentationMetadata",
    )


class AutoMlImageSegmentationInputs(proto.Message):
    r

    class ModelType(proto.Enum):
        r
        MODEL_TYPE_UNSPECIFIED = 0
        CLOUD_HIGH_ACCURACY_1 = 1
        CLOUD_LOW_ACCURACY_1 = 2
        MOBILE_TF_LOW_LATENCY_1 = 3

    model_type: ModelType = proto.Field(
        proto.ENUM,
        number=1,
        enum=ModelType,
    )
    budget_milli_node_hours: int = proto.Field(
        proto.INT64,
        number=2,
    )
    base_model_id: str = proto.Field(
        proto.STRING,
        number=3,
    )


class AutoMlImageSegmentationMetadata(proto.Message):
    r

    class SuccessfulStopReason(proto.Enum):
        r
        SUCCESSFUL_STOP_REASON_UNSPECIFIED = 0
        BUDGET_REACHED = 1
        MODEL_CONVERGED = 2

    cost_milli_node_hours: int = proto.Field(
        proto.INT64,
        number=1,
    )
    successful_stop_reason: SuccessfulStopReason = proto.Field(
        proto.ENUM,
        number=2,
        enum=SuccessfulStopReason,
    )


__all__ = tuple(sorted(__protobuf__.manifest))
