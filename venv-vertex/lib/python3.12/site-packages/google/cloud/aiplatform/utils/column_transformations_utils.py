
















from typing import Dict, List, Optional, Tuple

from google.cloud.aiplatform import datasets


def get_default_column_transformations(
    dataset: datasets._ColumnNamesDataset,
    target_column: str,
) -> Tuple[List[Dict[str, Dict[str, str]]], List[str]]:
    

    column_names = [
        column_name
        for column_name in dataset.column_names
        if column_name != target_column
    ]
    column_transformations = [
        {"auto": {"column_name": column_name}} for column_name in column_names
    ]

    return (column_transformations, column_names)


def validate_and_get_column_transformations(
    column_specs: Optional[Dict[str, str]] = None,
    column_transformations: Optional[List[Dict[str, Dict[str, str]]]] = None,
) -> Optional[List[Dict[str, Dict[str, str]]]]:
    
    
    if column_transformations is not None and column_specs is not None:
        raise ValueError(
            "Both column_transformations and column_specs were passed. Only "
            "one is allowed."
        )
    elif column_specs is not None:
        return [
            {transformation: {"column_name": column_name}}
            for column_name, transformation in column_specs.items()
        ]
    else:
        return column_transformations
