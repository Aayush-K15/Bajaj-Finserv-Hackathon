













import enum


class AutoRowIDs(enum.Enum):
    

    DISABLED = enum.auto()
    GENERATE_UUID = enum.auto()


class Compression(str, enum.Enum):
    

    GZIP = "GZIP"
    

    DEFLATE = "DEFLATE"
    

    SNAPPY = "SNAPPY"
    

    ZSTD = "ZSTD"
    

    NONE = "NONE"
    


class DecimalTargetType:
    

    NUMERIC = "NUMERIC"
    

    BIGNUMERIC = "BIGNUMERIC"
    

    STRING = "STRING"
    


class CreateDisposition(object):
    

    CREATE_IF_NEEDED = "CREATE_IF_NEEDED"
    

    CREATE_NEVER = "CREATE_NEVER"
    


class DatasetView(enum.Enum):
    

    DATASET_VIEW_UNSPECIFIED = "DATASET_VIEW_UNSPECIFIED"
    

    METADATA = "METADATA"
    

    ACL = "ACL"
    

    FULL = "FULL"
    


class DefaultPandasDTypes(enum.Enum):
    

    BOOL_DTYPE = object()
    

    INT_DTYPE = object()
    

    DATE_DTYPE = object()
    

    TIME_DTYPE = object()
    

    RANGE_DATE_DTYPE = object()
    

    RANGE_DATETIME_DTYPE = object()
    

    RANGE_TIMESTAMP_DTYPE = object()
    


class DestinationFormat(object):
    

    CSV = "CSV"
    

    NEWLINE_DELIMITED_JSON = "NEWLINE_DELIMITED_JSON"
    

    AVRO = "AVRO"
    

    PARQUET = "PARQUET"
    


class Encoding(object):
    

    UTF_8 = "UTF-8"
    

    ISO_8859_1 = "ISO-8859-1"
    


class QueryPriority(object):
    

    INTERACTIVE = "INTERACTIVE"
    

    BATCH = "BATCH"
    


class QueryApiMethod(str, enum.Enum):
    

    INSERT = "INSERT"
    

    QUERY = "QUERY"
    


class SchemaUpdateOption(object):
    

    ALLOW_FIELD_ADDITION = "ALLOW_FIELD_ADDITION"
    

    ALLOW_FIELD_RELAXATION = "ALLOW_FIELD_RELAXATION"
    


class SourceFormat(object):
    

    CSV = "CSV"
    

    DATASTORE_BACKUP = "DATASTORE_BACKUP"
    

    NEWLINE_DELIMITED_JSON = "NEWLINE_DELIMITED_JSON"
    

    AVRO = "AVRO"
    

    PARQUET = "PARQUET"
    

    ORC = "ORC"
    


class KeyResultStatementKind:
    

    KEY_RESULT_STATEMENT_KIND_UNSPECIFIED = "KEY_RESULT_STATEMENT_KIND_UNSPECIFIED"
    LAST = "LAST"
    FIRST_SELECT = "FIRST_SELECT"


class StandardSqlTypeNames(str, enum.Enum):
    

    def _generate_next_value_(name, start, count, last_values):
        return name

    TYPE_KIND_UNSPECIFIED = enum.auto()
    INT64 = enum.auto()
    BOOL = enum.auto()
    FLOAT64 = enum.auto()
    STRING = enum.auto()
    BYTES = enum.auto()
    TIMESTAMP = enum.auto()
    DATE = enum.auto()
    TIME = enum.auto()
    DATETIME = enum.auto()
    INTERVAL = enum.auto()
    GEOGRAPHY = enum.auto()
    NUMERIC = enum.auto()
    BIGNUMERIC = enum.auto()
    JSON = enum.auto()
    ARRAY = enum.auto()
    STRUCT = enum.auto()
    RANGE = enum.auto()
    
    
    FOREIGN = enum.auto()


class EntityTypes(str, enum.Enum):
    

    USER_BY_EMAIL = "userByEmail"
    GROUP_BY_EMAIL = "groupByEmail"
    DOMAIN = "domain"
    DATASET = "dataset"
    SPECIAL_GROUP = "specialGroup"
    VIEW = "view"
    IAM_MEMBER = "iamMember"
    ROUTINE = "routine"




class SqlTypeNames(str, enum.Enum):
    

    STRING = "STRING"
    BYTES = "BYTES"
    INTEGER = "INTEGER"
    INT64 = "INTEGER"
    FLOAT = "FLOAT"
    FLOAT64 = "FLOAT"
    DECIMAL = NUMERIC = "NUMERIC"
    BIGDECIMAL = BIGNUMERIC = "BIGNUMERIC"
    BOOLEAN = "BOOLEAN"
    BOOL = "BOOLEAN"
    GEOGRAPHY = "GEOGRAPHY"  
    RECORD = "RECORD"
    STRUCT = "RECORD"
    TIMESTAMP = "TIMESTAMP"
    DATE = "DATE"
    TIME = "TIME"
    DATETIME = "DATETIME"
    INTERVAL = "INTERVAL"  
    RANGE = "RANGE"  
    
    
    FOREIGN = "FOREIGN"


class WriteDisposition(object):
    

    WRITE_APPEND = "WRITE_APPEND"
    

    WRITE_TRUNCATE = "WRITE_TRUNCATE"
    

    WRITE_TRUNCATE_DATA = "WRITE_TRUNCATE_DATA"
    

    WRITE_EMPTY = "WRITE_EMPTY"
    


class DeterminismLevel:
    

    DETERMINISM_LEVEL_UNSPECIFIED = "DETERMINISM_LEVEL_UNSPECIFIED"
    

    DETERMINISTIC = "DETERMINISTIC"
    

    NOT_DETERMINISTIC = "NOT_DETERMINISTIC"
    


class RoundingMode(str, enum.Enum):
    

    def _generate_next_value_(name, start, count, last_values):
        return name

    ROUNDING_MODE_UNSPECIFIED = enum.auto()
    ROUND_HALF_AWAY_FROM_ZERO = enum.auto()
    ROUND_HALF_EVEN = enum.auto()


class BigLakeFileFormat(object):
    FILE_FORMAT_UNSPECIFIED = "FILE_FORMAT_UNSPECIFIED"
    

    PARQUET = "PARQUET"
    


class BigLakeTableFormat(object):
    TABLE_FORMAT_UNSPECIFIED = "TABLE_FORMAT_UNSPECIFIED"
    

    ICEBERG = "ICEBERG"
    


class UpdateMode(enum.Enum):
    

    UPDATE_MODE_UNSPECIFIED = "UPDATE_MODE_UNSPECIFIED"
    

    UPDATE_METADATA = "UPDATE_METADATA"
    

    UPDATE_ACL = "UPDATE_ACL"
    

    UPDATE_FULL = "UPDATE_FULL"
    


class JobCreationMode(object):
    

    JOB_CREATION_MODE_UNSPECIFIED = "JOB_CREATION_MODE_UNSPECIFIED"
    

    JOB_CREATION_REQUIRED = "JOB_CREATION_REQUIRED"
    

    JOB_CREATION_OPTIONAL = "JOB_CREATION_OPTIONAL"
    


class SourceColumnMatch(str, enum.Enum):
    

    SOURCE_COLUMN_MATCH_UNSPECIFIED = "SOURCE_COLUMN_MATCH_UNSPECIFIED"
    

    POSITION = "POSITION"
    

    NAME = "NAME"
    
