
















class GoogleAuthError(Exception):
    

    def __init__(self, *args, **kwargs):
        super(GoogleAuthError, self).__init__(*args)
        retryable = kwargs.get("retryable", False)
        self._retryable = retryable

    @property
    def retryable(self):
        return self._retryable


class TransportError(GoogleAuthError):
    


class RefreshError(GoogleAuthError):
    


class UserAccessTokenError(GoogleAuthError):
    


class DefaultCredentialsError(GoogleAuthError):
    


class MutualTLSChannelError(GoogleAuthError):
    


class ClientCertError(GoogleAuthError):
    

    @property
    def retryable(self):
        return False


class OAuthError(GoogleAuthError):
    


class ReauthFailError(RefreshError):
    

    def __init__(self, message=None, **kwargs):
        super(ReauthFailError, self).__init__(
            "Reauthentication failed. {0}".format(message), **kwargs
        )


class ReauthSamlChallengeFailError(ReauthFailError):
    


class MalformedError(DefaultCredentialsError, ValueError):
    


class InvalidResource(DefaultCredentialsError, ValueError):
    


class InvalidOperation(DefaultCredentialsError, ValueError):
    


class InvalidValue(DefaultCredentialsError, ValueError):
    


class InvalidType(DefaultCredentialsError, TypeError):
    


class OSError(DefaultCredentialsError, EnvironmentError):
    


class TimeoutError(GoogleAuthError):
    


class ResponseError(GoogleAuthError):
    
