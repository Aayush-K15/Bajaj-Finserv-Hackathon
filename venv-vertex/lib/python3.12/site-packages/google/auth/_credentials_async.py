
















import abc
import inspect

from google.auth import credentials


class Credentials(credentials.Credentials, metaclass=abc.ABCMeta):
    

    async def before_request(self, request, method, url, headers):
        
        
        
        

        if not self.valid:
            if inspect.iscoroutinefunction(self.refresh):
                await self.refresh(request)
            else:
                self.refresh(request)
        self.apply(headers)


class CredentialsWithQuotaProject(credentials.CredentialsWithQuotaProject):
    


class AnonymousCredentials(credentials.AnonymousCredentials, Credentials):
    


class ReadOnlyScoped(credentials.ReadOnlyScoped, metaclass=abc.ABCMeta):
    


class Scoped(credentials.Scoped):
    


def with_scopes_if_required(credentials, scopes):
    
    if isinstance(credentials, Scoped) and credentials.requires_scopes:
        return credentials.with_scopes(scopes)
    else:
        return credentials


class Signing(credentials.Signing, metaclass=abc.ABCMeta):
    
