















import io
import json

from google.auth import crypt
from google.auth import exceptions


def from_dict(data, require=None, use_rsa_signer=True):
    
    keys_needed = set(require if require is not None else [])

    missing = keys_needed.difference(data.keys())

    if missing:
        raise exceptions.MalformedError(
            "Service account info was not in the expected format, missing "
            "fields {}.".format(", ".join(missing))
        )

    
    if use_rsa_signer:
        signer = crypt.RSASigner.from_service_account_info(data)
    else:
        signer = crypt.ES256Signer.from_service_account_info(data)

    return signer


def from_filename(filename, require=None, use_rsa_signer=True):
    
    with io.open(filename, "r", encoding="utf-8") as json_file:
        data = json.load(json_file)
        return data, from_dict(data, require=require, use_rsa_signer=use_rsa_signer)
