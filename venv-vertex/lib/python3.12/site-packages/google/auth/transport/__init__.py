















import abc
import http.client as http_client

DEFAULT_RETRYABLE_STATUS_CODES = (
    http_client.INTERNAL_SERVER_ERROR,
    http_client.SERVICE_UNAVAILABLE,
    http_client.GATEWAY_TIMEOUT,
    http_client.REQUEST_TIMEOUT,
    http_client.TOO_MANY_REQUESTS,
)



DEFAULT_REFRESH_STATUS_CODES = (http_client.UNAUTHORIZED,)


DEFAULT_MAX_REFRESH_ATTEMPTS = 2



class Response(metaclass=abc.ABCMeta):
    

    @abc.abstractproperty
    def status(self):
        
        raise NotImplementedError("status must be implemented.")

    @abc.abstractproperty
    def headers(self):
        
        raise NotImplementedError("headers must be implemented.")

    @abc.abstractproperty
    def data(self):
        
        raise NotImplementedError("data must be implemented.")


class Request(metaclass=abc.ABCMeta):
    

    @abc.abstractmethod
    def __call__(
        self, url, method="GET", body=None, headers=None, timeout=None, **kwargs
    ):
        
        
        
        raise NotImplementedError("__call__ must be implemented.")
