















from typing import Union

import proto
import requests
import google.protobuf.message
from google.api_core._rest_streaming_base import BaseResponseIterator


class ResponseIterator(BaseResponseIterator):
    

    def __init__(
        self,
        response: requests.Response,
        response_message_cls: Union[proto.Message, google.protobuf.message.Message],
    ):
        self._response = response
        
        self._response_itr = self._response.iter_content(decode_unicode=True)
        super(ResponseIterator, self).__init__(
            response_message_cls=response_message_cls
        )

    def cancel(self):
        
        self._response.close()

    def __next__(self):
        while not self._ready_objs:
            try:
                chunk = next(self._response_itr)
                self._process_chunk(chunk)
            except StopIteration as e:
                if self._level > 0:
                    raise ValueError("Unfinished stream: %s" % self._obj)
                raise e
        return self._grab()

    def __iter__(self):
        return self
