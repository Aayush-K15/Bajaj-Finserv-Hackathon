















import functools
from enum import Enum
from urllib.parse import urlencode

ROUTING_METADATA_KEY = "x-goog-request-params"



ROUTING_PARAM_CACHE_SIZE = 32


def to_routing_header(params, qualified_enums=True):
    
    tuples = params.items() if isinstance(params, dict) else params
    if not qualified_enums:
        tuples = [(x[0], x[1].name) if isinstance(x[1], Enum) else x for x in tuples]
    return "&".join([_urlencode_param(*t) for t in tuples])


def to_grpc_metadata(params, qualified_enums=True):
    
    return (ROUTING_METADATA_KEY, to_routing_header(params, qualified_enums))



@functools.lru_cache(maxsize=ROUTING_PARAM_CACHE_SIZE)
def _urlencode_param(key, value):
    
    return urlencode(
        {key: value},
        
        safe="/",
    )
