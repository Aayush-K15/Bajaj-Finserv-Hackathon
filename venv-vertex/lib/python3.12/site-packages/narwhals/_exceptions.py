from __future__ import annotations

from warnings import warn


def find_stacklevel() -> int:
    
    import inspect
    from pathlib import Path

    import narwhals as nw

    pkg_dir = str(Path(nw.__file__).parent)

    
    frame = inspect.currentframe()
    n = 0
    try:
        while frame:
            fname = inspect.getfile(frame)
            if fname.startswith(pkg_dir) or (
                (qualname := getattr(frame.f_code, "co_qualname", None))
                
                and qualname.startswith("singledispatch.")
            ):
                frame = frame.f_back
                n += 1
            else:  
                break
        else:  
            pass
    finally:
        
        
        
        
        del frame
    return n


def issue_deprecation_warning(message: str, _version: str) -> None:  
    
    warn(message=message, category=DeprecationWarning, stacklevel=find_stacklevel())


def issue_warning(message: str, category: type[Warning]) -> None:
    warn(message=message, category=category, stacklevel=find_stacklevel())
