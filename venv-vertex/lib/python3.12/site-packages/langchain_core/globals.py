

import warnings
from typing import TYPE_CHECKING, Optional

if TYPE_CHECKING:
    from langchain_core.caches import BaseCache






_verbose: bool = False
_debug: bool = False
_llm_cache: Optional["BaseCache"] = None


def set_verbose(value: bool) -> None:  
    
    try:
        import langchain  

        
        
        
        with warnings.catch_warnings():
            warnings.filterwarnings(
                "ignore",
                message=(
                    "Importing verbose from langchain root module "
                    "is no longer supported"
                ),
            )
            
            
            
            
            
            
            langchain.verbose = value
    except ImportError:
        pass

    global _verbose  
    _verbose = value


def get_verbose() -> bool:
    
    try:
        import langchain

        
        
        
        with warnings.catch_warnings():
            warnings.filterwarnings(
                "ignore",
                message=(
                    ".*Importing verbose from langchain root module "
                    "is no longer supported"
                ),
            )
            
            
            
            
            
            
            
            
            
            
            
            
            old_verbose = langchain.verbose
    except ImportError:
        old_verbose = False

    return _verbose or old_verbose


def set_debug(value: bool) -> None:  
    
    try:
        import langchain

        
        
        
        with warnings.catch_warnings():
            warnings.filterwarnings(
                "ignore",
                message="Importing debug from langchain root module "
                "is no longer supported",
            )
            
            
            
            
            
            
            langchain.debug = value
    except ImportError:
        pass

    global _debug  
    _debug = value


def get_debug() -> bool:
    
    try:
        import langchain

        
        
        
        with warnings.catch_warnings():
            warnings.filterwarnings(
                "ignore",
                message="Importing debug from langchain root module "
                "is no longer supported",
            )
            
            
            
            
            
            
            
            
            
            
            
            old_debug = langchain.debug
    except ImportError:
        old_debug = False

    return _debug or old_debug


def set_llm_cache(value: Optional["BaseCache"]) -> None:
    
    try:
        import langchain

        
        
        
        with warnings.catch_warnings():
            warnings.filterwarnings(
                "ignore",
                message=(
                    "Importing llm_cache from langchain root module "
                    "is no longer supported"
                ),
            )
            
            
            
            
            
            
            langchain.llm_cache = value
    except ImportError:
        pass

    global _llm_cache  
    _llm_cache = value


def get_llm_cache() -> "BaseCache":
    
    try:
        import langchain

        
        
        
        with warnings.catch_warnings():
            warnings.filterwarnings(
                "ignore",
                message=(
                    "Importing llm_cache from langchain root module "
                    "is no longer supported"
                ),
            )
            
            
            
            
            
            
            
            
            
            
            
            
            
            old_llm_cache = langchain.llm_cache
    except ImportError:
        old_llm_cache = None

    return _llm_cache or old_llm_cache
